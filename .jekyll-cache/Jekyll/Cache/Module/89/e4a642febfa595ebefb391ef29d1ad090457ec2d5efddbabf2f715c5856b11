I"&"





<!--제목-->
<article id="post-blog-library-01_03_파이썬 클래스" class="page post mb6" role="article">
  <header>
    <h1 class="post-title flip-project-title">
      
        PyTorch로 배우는 딥러닝/머신러닝 생기초
      
    </h1>
    <!--부제목-->
    <h2 class="post-title flip-project-shubtitle">
      
        01.03.파이썬클래스
      
    </h2>
    <div class="post-date">
      
      
      
      
      









카테고리 : <a href="/blog/" class="flip-title">Blog</a> >> <a href="/library/" class="flip-title">Library</a>

      









  tag #<span>Pytorch</span>

      <br>
      <!--년월일-->
      
      <time datetime="2021-01-27T00:00:00+09:00">2021년 01월 27일 글</time>
    </div>
    
    

    



  <div class="hr pb0"></div>

    <!--상단버튼-->
    


<div class="page-button">
	<div>
		
		<a id="prev" class="button" href="/blog/library/2021-01-27-01_02_%ED%85%90%EC%84%9C%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B02/">&laquo; 이전글</a>
		
	</div>
	<div>
		
		<a id="next" class="button" href="/blog/library/2021-01-27-08_01_%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC%EC%A0%84%EC%B2%98%EB%A6%AC%EC%9D%B4%ED%95%B4/">다음글 &raquo;</a>
		
	</div>
</div>
      <div style="text-align:right; text-align: center">
          <a href="https://hits.seeyoufarm.com/localhost:4000/blog/library/2021-01-27-01_03_%ED%8C%8C%EC%9D%B4%EC%8D%AC-%ED%81%B4%EB%9E%98%EC%8A%A4/"
            target="_blank">
            <img
            src="https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https://localhost:4000/blog/library/2021-01-27-01_03_%ED%8C%8C%EC%9D%B4%EC%8D%AC-%ED%81%B4%EB%9E%98%EC%8A%A4/&count_bg=%23293786&title_bg=%23555555&icon=bilibili.svg&icon_color=%23E7E7E7&title=.&edge_flat=false"/>
          </a>
      </div>
  </header>
  <div class="markdown-body">
  
    <h2 id="03파이썬-클래스class">03.파이썬 클래스(class)</h2>
<hr />

<p>개요</p>
<blockquote>
  <p>대부분의 파이토치의 구현체들이 기본적으로 클래스(Class)로 구현되어 있는것을 볼수 있다.</p>
</blockquote>

<h2 id="031-함수function와-클래스class">03.1. 함수(Function)와 클래스(class)</h2>
<hr />

<h3 id="11-함수function로-덧셈기-구현">1.1. 함수(function)로 덧셈기 구현</h3>

<p>add 함수로 덧셈기 구현
result를 전역변수로 선언</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>
</code></pre></div></div>
<p>add함수 구현</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">num</span><span class="p">):</span>
  <span class="k">global</span> <span class="n">result</span>
  <span class="n">result</span> <span class="o">+=</span> <span class="n">num</span>
  <span class="k">return</span> <span class="n">result</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">add</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">add</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3
7
</code></pre></div></div>
<p>result가 0 –&gt; +3 = 3이 출력, + 4 = result의 값이 이미 앞서 3으로 갱신되었기 때문에 3+4 = 7이 리턴</p>

<h3 id="12-함수function로-덧셈기-두-개-구현">1.2. 함수(function)로 덧셈기 두 개 구현</h3>
<p>두 개의 덧셈기를 만들기 위해 두개의 함수를 따로 독립적으로 구현해야함</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result1</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">result2</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">def</span> <span class="nf">add1</span><span class="p">(</span><span class="n">num</span><span class="p">):</span>
    <span class="k">global</span> <span class="n">result1</span>
    <span class="n">result1</span> <span class="o">+=</span> <span class="n">num</span>
    <span class="k">return</span> <span class="n">result1</span>

<span class="k">def</span> <span class="nf">add2</span><span class="p">(</span><span class="n">num</span><span class="p">):</span>
    <span class="k">global</span> <span class="n">result2</span>
    <span class="n">result2</span> <span class="o">+=</span> <span class="n">num</span>
    <span class="k">return</span> <span class="n">result2</span>

<span class="k">print</span><span class="p">(</span><span class="n">add1</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">add1</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">add2</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">add2</span><span class="p">(</span><span class="mi">7</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3
7
3
10
</code></pre></div></div>

<h3 id="13-클래스class로-덧셈기-구현">1.3. 클래스(class)로 덧셈기 구현</h3>
<p>클래스는 붕어빵 틀, 객체라는 붕어빵을 계속 찍어낼수 있음</p>

<p>클래스 : 붕어빵 틀 선언</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Calculator</span><span class="p">:</span>
  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>

  <span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">num</span><span class="p">):</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">result</span> <span class="o">+=</span> <span class="n">num</span>
    <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">result</span>
</code></pre></div></div>

<p>객체 : 붕어빵 만들기</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cal1</span> <span class="o">=</span> <span class="n">Calculator</span><span class="p">()</span>
<span class="n">cal2</span> <span class="o">=</span> <span class="n">Calculator</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">cal1</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">cal1</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">cal2</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">cal2</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="mi">7</span><span class="p">))</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3
7
3
10
</code></pre></div></div>

<p>두 개의 객체는 독립적으로 연산되고 있음을 알 수 있습니다. 앞에서는 이렇게 독립적인 두 개의 덧셈기를 함수로 구현하려고 했다면 함수를 두 개 만들어야 했지만, 클래스라는 것을 하나 선언하고, 이 클래스를 통해 별도의 객체를 생성하자 코드가 훨씬 간결해졌습니다.</p>

  
</div>
</article>
:ET