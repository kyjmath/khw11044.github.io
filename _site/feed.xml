<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI 대학원생의 공부 블로그</title>
    <description>따라하면서 배우는 따라쟁이 블로그
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 29 Jan 2021 16:02:25 +0900</pubDate>
    <lastBuildDate>Fri, 29 Jan 2021 16:02:25 +0900</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>jekyll 블로그 포스팅을 위한 세팅</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#개요&quot; id=&quot;markdown-toc-개요&quot;&gt;개요&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#jekyll-spaceship&quot; id=&quot;markdown-toc-jekyll-spaceship&quot;&gt;Jekyll Spaceship!!!&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#1-gemfile-파일에-아래-코드-넣기&quot; id=&quot;markdown-toc-1-gemfile-파일에-아래-코드-넣기&quot;&gt;1. Gemfile 파일에 아래 코드 넣기&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#2-_configyml파일의-plugins에-아래-코드-넣기&quot; id=&quot;markdown-toc-2-_configyml파일의-plugins에-아래-코드-넣기&quot;&gt;2. _config.yml파일의 plugins에 아래 코드 넣기&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#3-원하는-효과-필요없는-효과-골라서-넣기&quot; id=&quot;markdown-toc-3-원하는-효과-필요없는-효과-골라서-넣기&quot;&gt;3. 원하는 효과 필요없는 효과 골라서 넣기&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#사용법&quot; id=&quot;markdown-toc-사용법&quot;&gt;사용법&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#수학-수식--mathjax&quot; id=&quot;markdown-toc-수학-수식--mathjax&quot;&gt;수학 수식 : MathJax&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#mermaid&quot; id=&quot;markdown-toc-mermaid&quot;&gt;mermaid&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#media-유튜브등&quot; id=&quot;markdown-toc-media-유튜브등&quot;&gt;Media (유튜브등)&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#자세한-사용법-reference&quot; id=&quot;markdown-toc-자세한-사용법-reference&quot;&gt;자세한 사용법, Reference&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;지금까지 깃헙 블로그를 하면서 수많은 어려움을 만났었는데요… ㅠㅠ&lt;br /&gt;
지킬 &lt;strong&gt;수학수식&lt;/strong&gt; 넣는 방법을 찾기위해 몇일을 밤을 새며 찾아보고 (js파일을 다운받고 html을 만들고 불러오고 붙혀넣고, gem로 어떻게 하고… 그래도 안되고..)&lt;br /&gt;
지킬 &lt;strong&gt;mermaid&lt;/strong&gt; 넣는 방법 찾기위해 수일을 쓰고..&lt;br /&gt;
지킬 &lt;strong&gt;유튜브 영상&lt;/strong&gt;넣는 방법도 따로 뭐 만들고 넣고 불러오고…&lt;/p&gt;

&lt;p&gt;참 많은 고생을 했는데요…&lt;/p&gt;

&lt;p&gt;이제 그럴필요 없습니다.&lt;/p&gt;

&lt;p&gt;킹 갓 제네럴 &lt;strong&gt;지킬 플러그인&lt;/strong&gt;을 소개 시켜드릴려고 합니다.&lt;/p&gt;

&lt;p&gt;지킬, github 블로그, github pages에 수학수식, mermaid, 유튜브 영상 모든지 이 Plugin이면 끝입니다.&lt;/p&gt;

&lt;h2 id=&quot;jekyll-spaceship&quot;&gt;Jekyll Spaceship!!!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jeffreytse/jekyll-spaceship&quot;&gt;Jekyll Spaceship!!!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위 링크를 알아냈습니다…. 😂&lt;/p&gt;

&lt;p&gt;방법은&lt;/p&gt;

&lt;h4 id=&quot;1-gemfile-파일에-아래-코드-넣기&quot;&gt;1. Gemfile 파일에 아래 코드 넣기&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'jekyll-spaceship'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;2-_configyml파일의-plugins에-아래-코드-넣기&quot;&gt;2. _config.yml파일의 plugins에 아래 코드 넣기&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;plugins:
  - jekyll-spaceship
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;3-원하는-효과-필요없는-효과-골라서-넣기&quot;&gt;3. 원하는 효과 필요없는 효과 골라서 넣기&lt;/h4&gt;

&lt;p&gt;저는 아래 코드를 다 넣었습니다.
수학 수식을 위한 mathjax와 mermaid, media(유튜브등) 등등 많은 효과를 쉽게 쓰기위해 다 추가합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Where things are
jekyll-spaceship:
  # default enabled processors
  processors:
    - table-processor
    - mathjax-processor
    - plantuml-processor
    - mermaid-processor
    - polyfill-processor
    - media-processor
    - emoji-processor
    - element-processor
  mathjax-processor:
    src:
      - https://polyfill.io/v3/polyfill.min.js?features=es6
      - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
    config:
      tex:
        inlineMath:
          - ['$','$']
          - ['\(','\)']
        displayMath:
          - ['\$\$','\$\$']
          - ['\[','\]']
      svg:
        fontCache: 'global'
    optimize: # optimization on building stage to check and add mathjax scripts
      enabled: true # value `false` for adding to all pages
      include: []   # include patterns for math expressions checking (regexp)
      exclude: []   # exclude patterns for math expressions checking (regexp)
  plantuml-processor:
    mode: default  # mode value 'pre-fetch' for fetching image at building stage
    css:
      class: plantuml
    syntax:
      code: 'plantuml!'
      custom: ['&amp;lt;img class=&quot;plantuml&quot; src=&quot;http://www.plantuml.com/plantuml/svg/~h407374617274756d6c272c202740656e64756d6c&quot;&amp;gt;']
    src: http://www.plantuml.com/plantuml/svg/
  mermaid-processor:
    mode: default  # mode value 'pre-fetch' for fetching image at building stage
    css:
      class: mermaid
    syntax:
      code: 'mermaid!'
      custom: ['&amp;lt;img class=&quot;mermaid&quot; src=&quot;https://mermaid.ink/svg/eyJjb2RlIjoiJywgJyIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0In19&quot;&amp;gt;']
    config:
      theme: default
    src: https://mermaid.ink/svg/
  media-processor:
    default:
      id: 'media-{id}'
      class: 'media'
      width: '100%'
      height: 350
      frameborder: 0
      style: 'max-width: 600px; outline: none;'
      allow: 'encrypted-media; picture-in-picture'
  emoji-processor:
    css:
      class: emoji
    src: https://github.githubassets.com/images/icons/emoji/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;사용법&quot;&gt;사용법&lt;/h2&gt;

&lt;h3 id=&quot;수학-수식--mathjax&quot;&gt;수학 수식 : MathJax&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ a * b = c ^ b $

$ 2^{\frac{n-1}{3}} $

$ \int\_a^b f(x)\,dx. $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;$ a * b = c ^ b $&lt;/p&gt;

&lt;p&gt;$ 2^{\frac{n-1}{3}} $&lt;/p&gt;

&lt;p&gt;$ \int_a^b f(x)\,dx. $&lt;/p&gt;

&lt;p&gt;hydejack 테마의 경우 inline($한개만)이 안먹혔는데 이제는 된다. ^^&lt;/p&gt;

&lt;h3 id=&quot;mermaid&quot;&gt;mermaid&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\`\`\`mermaid!
pie title Pets adopted by volunteers
  &quot;Dogs&quot; : 386
  &quot;Cats&quot; : 85
  &quot;Rats&quot; : 35
\`\`\`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;\는 빼주세요&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;pie title Pets adopted by volunteers
  &quot;Dogs&quot; : 386
  &quot;Cats&quot; : 85
  &quot;Rats&quot; : 35
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\`\`\`mermaid!
graph LR
  A --&amp;gt; B;
  B --&amp;gt; id03{C}
  B -- from B to C --&amp;gt;
  D --- E
  E -- from E to F --- F
\`\`\`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph LR
  A --&amp;gt; B;
  B --&amp;gt; id03{C}
  B -- from B to C --&amp;gt;
  D --- E
  E -- from E to F --- F
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://mermaid-js.github.io/mermaid/#/&quot;&gt;mermaid 자세한 사용법&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;media-유튜브등&quot;&gt;Media (유튜브등)&lt;/h3&gt;

&lt;p&gt;Inline-style :&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![]({media-link})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Reference-style:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![][{reference}]

[{reference}]: {media-link}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Youtube Usage&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![](https://www.youtube.com/watch?v=Ptk_1Dc2iPY)

![](//www.youtube.com/watch?v=Ptk_1Dc2iPY?width=800&amp;amp;height=500)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://www.youtube.com/watch?v=Ptk_1Dc2iPY&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//www.youtube.com/watch?v=Ptk_1Dc2iPY?width=800&amp;amp;height=500&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;자세한-사용법-reference&quot;&gt;자세한 사용법, Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jeffreytse/jekyll-spaceship&quot;&gt;Jekyll Spaceship!!!&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;깃헙 레파지토리에 올리고 url로 확인해보니 하나도 적용이 안되어있네…. 로컬에서만 잘 작동되는 것이었다…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이렇게 써져있기는 한데…&lt;/p&gt;

&lt;p&gt;누가 대신 해결해줬으면 좋겠네요..&lt;/p&gt;

&lt;p&gt;💡도움말 : GitHub 페이지는 safe모드 에서 실행되며 허용 된 플러그인 집합 만 허용 합니다 . GitHub 페이지에서 gem을 사용하려면 로컬에서 빌드하거나 CI (예 : travis , github workflow )를 사용하고 gh-pages브랜치에 배포해야합니다 .&lt;/p&gt;

&lt;p&gt;무제한 GitHub 페이지에 대한 추가 사항
다음은 Jekyll 사이트 배포를위한 &lt;a href=&quot;https://github.com/jeffreytse/jekyll-deploy-action&quot;&gt;jekyll-deploy-action&lt;/a&gt; 이라는 GitHub 작업 입니다.👍
다음은 Travis를 사용하여 참조를 위해 GitHub 페이지를 구축하고 배포 하는 &lt;a href=&quot;https://github.com/jeffreytse/jekyll-jeffreytse-blog&quot;&gt;Jekyll 사이트&lt;/a&gt; 입니다.&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/blog-etc/2021-01-28-jekyll-setting/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/blog-etc/2021-01-28-jekyll-setting/</guid>
        
        <category>setting</category>
        
        
        <category>blog</category>
        
        <category>blog-etc</category>
        
      </item>
    
      <item>
        <title>자연어 전처리의 전처리</title>
        <description>&lt;h2 id=&quot;자연어-처리의-전처리-이해하기&quot;&gt;자연어 처리의 전처리 이해하기&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;*3D Tensor(Typical Natural Language Processing) - NLP 분야에서의 3차원 텐서&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;t&lt;/td&gt;
      &lt;td&gt;= (batch_size,length,dim)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/pytorch_basic/0102_04.JPG&quot; alt=&quot;0102_04&quot; /&gt;{width:400 height:auto}&lt;/p&gt;

&lt;p&gt;자연어 처리 3차원 텐서(batch_size, 문장 길이, 단어 벡터의 차원) 사4&lt;/p&gt;

&lt;p&gt;세로 : batch_size&lt;br /&gt;
가로 : 너비(width)&lt;br /&gt;
높이 : height&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;* NLP 분야의 3D 텐서 예제로 이해하기&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;아래 4개의 문장으로 구성된 전체 훈련 데이터가 있다.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[[나는 사과를 좋아해], [나는 바나나를 좋아해], [나는 사과를 싫어해], [나는 바나나를 싫어해]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;컴퓨터는 아직 ‘나는 사과를 좋아해’에서 단어가 1개인지 3개인지 이해하지 못한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;컴퓨터의 입력으로 사용하기 위해서는 단어별로 나눠주어야 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[['나는', '사과를', '좋아해'], ['나는', '바나나를', '좋아해'], ['나는', '사과를', '싫어해'], ['나는', '바나나를', '싫어해']]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;4 x 3 크기 2D 텐서&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;각 단어를 벡터로 만든다.
단어를 3차원의 벡터로 변환&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'나는' = [0.1, 0.2, 0.9]
'사과를' = [0.3, 0.5, 0.1]
'바나나를' = [0.3, 0.5, 0.2]
'좋아해' = [0.7, 0.6, 0.5]
'싫어해' = [0.5, 0.6, 0.7]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[[[0.1, 0.2, 0.9], [0.3, 0.5, 0.1], [0.7, 0.6, 0.5]],
 [[0.1, 0.2, 0.9], [0.3, 0.5, 0.2], [0.7, 0.6, 0.5]],
 [[0.1, 0.2, 0.9], [0.3, 0.5, 0.1], [0.5, 0.6, 0.7]],
 [[0.1, 0.2, 0.9], [0.3, 0.5, 0.2], [0.5, 0.6, 0.7]]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;4 x 3 x 3 크기의 3D 텐서가 되었다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 27 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/library/2021-01-27-08_01_%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC%EC%A0%84%EC%B2%98%EB%A6%AC%EC%9D%B4%ED%95%B4/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/library/2021-01-27-08_01_%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC%EC%A0%84%EC%B2%98%EB%A6%AC%EC%9D%B4%ED%95%B4/</guid>
        
        <category>PyTorch</category>
        
        
        <category>blog</category>
        
        <category>library</category>
        
      </item>
    
      <item>
        <title>01.파이토치 기초(PyTorch Basic)</title>
        <description>&lt;h2 id=&quot;03파이썬-클래스class&quot;&gt;03.파이썬 클래스(class)&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;개요&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;대부분의 파이토치의 구현체들이 기본적으로 클래스(Class)로 구현되어 있는것을 볼수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;031-함수function와-클래스class&quot;&gt;03.1. 함수(Function)와 클래스(class)&lt;/h2&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;11-함수function로-덧셈기-구현&quot;&gt;1.1. 함수(function)로 덧셈기 구현&lt;/h3&gt;

&lt;p&gt;add 함수로 덧셈기 구현
result를 전역변수로 선언&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;add함수 구현&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;result가 0 –&amp;gt; +3 = 3이 출력, + 4 = result의 값이 이미 앞서 3으로 갱신되었기 때문에 3+4 = 7이 리턴&lt;/p&gt;

&lt;h3 id=&quot;12-함수function로-덧셈기-두-개-구현&quot;&gt;1.2. 함수(function)로 덧셈기 두 개 구현&lt;/h3&gt;
&lt;p&gt;두 개의 덧셈기를 만들기 위해 두개의 함수를 따로 독립적으로 구현해야함&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
7
3
10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;13-클래스class로-덧셈기-구현&quot;&gt;1.3. 클래스(class)로 덧셈기 구현&lt;/h3&gt;
&lt;p&gt;클래스는 붕어빵 틀, 객체라는 붕어빵을 계속 찍어낼수 있음&lt;/p&gt;

&lt;p&gt;클래스 : 붕어빵 틀 선언&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Calculator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;객체 : 붕어빵 만들기&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cal1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Calculator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cal2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Calculator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cal1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cal1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cal2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cal2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
7
3
10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;두 개의 객체는 독립적으로 연산되고 있음을 알 수 있습니다. 앞에서는 이렇게 독립적인 두 개의 덧셈기를 함수로 구현하려고 했다면 함수를 두 개 만들어야 했지만, 클래스라는 것을 하나 선언하고, 이 클래스를 통해 별도의 객체를 생성하자 코드가 훨씬 간결해졌습니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/library/2021-01-27-01_03_%ED%8C%8C%EC%9D%B4%EC%8D%AC-%ED%81%B4%EB%9E%98%EC%8A%A4/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/library/2021-01-27-01_03_%ED%8C%8C%EC%9D%B4%EC%8D%AC-%ED%81%B4%EB%9E%98%EC%8A%A4/</guid>
        
        <category>PyTorch</category>
        
        
        <category>blog</category>
        
        <category>library</category>
        
      </item>
    
      <item>
        <title>01.파이토치 기초(PyTorch Basic)</title>
        <description>&lt;h2 id=&quot;02텐서-조작하기tensor-manipulation2&quot;&gt;02.텐서 조작하기(Tensor Manipulation)2&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;개요&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;이어서 텐서를 조작하는 방법을 알아본다, 텐서 차원 변경, 크기변경, View, Squeeze, Unsqueeze, Concatenate, Stacking, In-place Operation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;4-4-뷰view---원소의-수를-유지하면서-텐서의-크기-변경&quot;&gt;4-4) 뷰(View) - 원소의 수를 유지하면서 텐서의 크기 변경&lt;/h4&gt;

&lt;p&gt;파이토치 텐서의 뷰(View) : Numpy의 reshape과 같은 역할&lt;br /&gt;
텐서의 크기를 변경&lt;/p&gt;

&lt;p&gt;**x.view([?,?]) –&amp;gt; x행렬을 ?x?크기의 행렬로 reshape, 원소의 개수는 유지&lt;/p&gt;

&lt;p&gt;3차원 텐서&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;torch.Size([2, 2, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/pytorch_basic/0102_05.JPG&quot; alt=&quot;0102_05&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-4-1-3차원-텐서에서-2차원-텐서로-변경&quot;&gt;4-4-1) 3차원 텐서에서 2차원 텐서로 변경&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# ft라는 텐서를 (?, 3)의 크기로 변경
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[ 0.,  1.,  2.],
        [ 3.,  4.,  5.],
        [ 6.,  7.,  8.],
        [ 9., 10., 11.]])
torch.Size([4, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;view([-1, 3]) :&lt;br /&gt;
-1: 첫번째 차원은 사용자가 잘 모르겠으니 파이토치에 맡기겠다는 의미&lt;br /&gt;
3 : 번째 차원의 길이는 3을 가지도록 하라는 의미&lt;br /&gt;
==&amp;gt; 차원 텐서를 2차원 텐서로 변경하되 (?, 3)의 크기로 변경 :  (4, 3)의 크기&lt;/p&gt;

&lt;p&gt;(2, 2, 3) -&amp;gt; (2 × 2, 3) -&amp;gt; (4, 3)&lt;/p&gt;

&lt;h4 id=&quot;4-4-2-3차원-텐서의-크기-변경&quot;&gt;4-4-2) 3차원 텐서의 크기 변경&lt;/h4&gt;
&lt;p&gt;3차원 텐서에서 3차원 텐서로 차원은 유지하되, 크기(shape)를 바꿈&lt;/p&gt;

&lt;p&gt;view로 텐서의 크기를 변경하더라도 원소의 수는 유지&lt;/p&gt;

&lt;p&gt;(2 × 2 × 3) 텐서를 (? × 1 × 3) 텐서로 변경 –&amp;gt; ?는 4&lt;br /&gt;
2 × 2 × 3) = (? × 1 × 3) = 12를 만족해야함&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[[ 0.,  1.,  2.]],
        [[ 3.,  4.,  5.]],
        [[ 6.,  7.,  8.]],
        [[ 9., 10., 11.]]])
torch.Size([4, 1, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-5-스퀴즈squeeze---1인-차원을-제거&quot;&gt;4-5) 스퀴즈(Squeeze) - 1인 차원을 제거&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;스퀴즈 : 차원이 1인 경우에는 해당 차원을 제거&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[0.],
        [1.],
        [2.]])
torch.Size([3, 1])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;squeeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;squeeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([0., 1., 2.])
torch.Size([3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;1이었던 두번째 차원이 제거되면서  (3,)의 크기를 가지는 텐서로 변경 : 1차원 벡터
(3x1) –&amp;gt; (3,)
[[0.],&lt;br /&gt;
[1.],&lt;br /&gt;
[2.]] –&amp;gt; [3]&lt;/p&gt;

&lt;h4 id=&quot;4-6-언스퀴즈unsqueeze---특정-위치에-1인-차원을-추가&quot;&gt;4-6) 언스퀴즈(Unsqueeze) - 특정 위치에 1인 차원을 추가&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;특정 위치에 1인 차원을 추가&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;torch.Size([3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;현재는 차원이 1개인 1차원 벡터&lt;/strong&gt;&lt;br /&gt;
첫번째 차원에 1인 차원을 추가&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.unsqueeze(0)&lt;/strong&gt; : 0은 index 0으로 첫번째 차원을 의미–&amp;gt; 첫번째 차원에 1인 차원이 추가
 (3,) –&amp;gt; 첫번째 차원에 1인 차원을 추가하면 (1, 3)의 크기
&lt;strong&gt;.unsqueeze(1)&lt;/strong&gt; : 1은 index 1로 두번째 차원을 의미–&amp;gt; 두번째 차원에 1인 차원이 추가
 (3,) –&amp;gt; 두번째 차원에 1인 차원을 추가하면 (3, 1)의 크기&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.unsqueeze(-1)&lt;/strong&gt; : -1은 마지막 index의 차원을 의미–&amp;gt; 마지막 차원에 1인 차원이 추가&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsqueeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 인덱스가 0부터 시작하므로 0은 첫번째 차원을 의미한다.
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsqueeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[0., 1., 2.]])
torch.Size([1, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(3,)의 크기를 가졌던 1차원 벡터 -&amp;gt; (1, 3)의 2차원 텐서로 변경&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsqueeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1은 두번째 차원을 의미한다.
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsqueeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[0.],
        [1.],
        [2.]])
torch.Size([3, 1])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(3,)의 크기를 가졌던 1차원 벡터 -&amp;gt; (3,1)의 2차원 텐서로 변경&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsqueeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# -1은 마지막 차원을 의미 여기서는 두번째 차원
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsqueeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[0., 1., 2.]])
torch.Size([1, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(3,)의 크기를 가졌던 1차원 벡터 -&amp;gt; (3,1)의 2차원 텐서로 변경&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.view()&lt;/strong&gt; 로 1차원 벡터를 2차원 텐서로 만들기&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[0., 1., 2.]])
torch.Size([1, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;unsqueeze랑 view랑 비슷~&lt;/p&gt;

&lt;h4 id=&quot;4-7-타입-캐스팅type-casting&quot;&gt;4-7) 타입 캐스팅(Type Casting)&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/pytorch_basic/0102_06.JPG&quot; alt=&quot;0102_06&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자료형을 변환하는 것 : 타입 캐스팅&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;lt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LongTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# long -&amp;gt; float
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;bt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ByteTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# long 타입의 텐서로 변경
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# float 타입의 텐서로 변경
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-8-연결하기concatenate&quot;&gt;4-8) 연결하기(Concatenate)&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;torch.cat[x,y]&lt;/strong&gt; : x 텐서와 y 텐서를 연결,&lt;br /&gt;
dim : 어느 차원을 늘릴 것인지 인자로 줄 수 있음, dim=0 : 첫번째 차원을 늘림&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[1., 2.],
        [3., 4.],
        [5., 6.],
        [7., 8.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;dim=0 이면 두 개의 (2 × 2) 텐서 –&amp;gt; (4 x 2)&lt;/p&gt;

&lt;p&gt;dim=1 이면&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[1., 2., 5., 6.],
        [3., 4., 7., 8.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;dim=1 이면 두 개의 (2 × 2) 텐서 –&amp;gt; (2 × 4)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;딥 러닝에서는 주로 모델의 입력 또는 중간 연산에서 두 개의 텐서를 연결하는 경우가 많습니다. 두 텐서를 연결해서 입력으로 사용하는 것은 두 가지의 정보를 모두 사용한다는 의미를 가지고 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;4-9-스택킹stacking&quot;&gt;4-9) 스택킹(Stacking)&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;연결(concatenate)을 하는 또 다른 방법으로 스택킹(Stacking)&lt;/p&gt;

&lt;p&gt;위에서 아래로 쌓기 : &lt;strong&gt;torch.stack([x,y,z])&lt;/strong&gt;&lt;br /&gt;
왼쪽에서 오른쪽으로 쌓기 : &lt;strong&gt;torch.stack([x,y,z], dim=1)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;크기가 (2,)로 모두 동일한 3개의 벡터&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;torch.stack을 통해서 3개의 벡터를 모두 스택킹&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;torch.stack([x,y,z])&lt;/strong&gt;
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[1., 4.],
      [2., 5.],
      [3., 6.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/pytorch_basic/0102_07.JPG&quot; alt=&quot;0102_07&quot; /&gt;&lt;/p&gt;

&lt;p&gt;세 개의 (1 × 2) 텐서 아래로 stacking –&amp;gt; (3 × 2)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;torch.stack([x,y,z], dim=1)&lt;/strong&gt;
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[1., 2., 3.],
        [4., 5., 6.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/pytorch_basic/0102_08.JPG&quot; alt=&quot;0102_08&quot; /&gt;&lt;/p&gt;

&lt;p&gt;세 개의 (1 × 2) 텐서 옆으로 stacking –&amp;gt; (2 × 3)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;torch.stack([x, y, z])&lt;/strong&gt;&lt;br /&gt;
= &lt;strong&gt;torch.cat([x.unsqueeze(0), y.unsqueeze(0), z.unsqueeze(0)], dim=0)&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsqueeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsqueeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unsqueeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[1., 4.],
        [2., 5.],
        [3., 6.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-10-ones_like와-zeros_like---0으로-채워진-텐서와-1로-채워진-텐서&quot;&gt;4-10) ones_like와 zeros_like - 0으로 채워진 텐서와 1로 채워진 텐서&lt;/h4&gt;
&lt;hr /&gt;

&lt;p&gt;(2 x 3) 텐서&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[0., 1., 2.],
        [2., 1., 0.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ones_like를 하면 동일한 크기(shape)의 1으로만 값이 채워진 텐서를 생성&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones_like&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[1., 1., 1.],
        [1., 1., 1.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;zeros_like를 하면 동일한 크기(shape)의 0으로만 값이 채워진 텐서를 생성&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros_like&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[0., 0., 0.],
        [0., 0., 0.]])

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-11-in-place-operation-덮어쓰기-연산&quot;&gt;4-11) In-place Operation (덮어쓰기 연산)&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;연산 뒤에 _를 붙이면 기존의 값에 덮어쓰기&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(2 × 2) 텐서를 만들고 x에 저장&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;곱하기 연산을 한 값과 기존의 값을 출력&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 곱하기 2를 수행한 결과를 출력
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 기존의 값 출력
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[2., 4.],
        [6., 8.]])
tensor([[1., 2.],
        [3., 4.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;첫번째 출력은 곱하기 2가 수행된 결과&lt;br /&gt;
두번째 출력은 기존 값이 그대로 출력&lt;/p&gt;

&lt;p&gt;곱하기 2를 수행했지만 x에 다시 저장하지 않았으므로&lt;br /&gt;
기존 값 x는 변하지 않음&lt;/p&gt;

&lt;p&gt;연산 뒤에 _를 붙이면 기존의 값을 덮어쓰기를 함&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mul_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[2., 4.],
        [6., 8.]])
tensor([[2., 4.],
        [6., 8.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 27 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/library/2021-01-27-01_02_%ED%85%90%EC%84%9C%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B02/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/library/2021-01-27-01_02_%ED%85%90%EC%84%9C%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B02/</guid>
        
        <category>PyTorch</category>
        
        
        <category>blog</category>
        
        <category>library</category>
        
      </item>
    
      <item>
        <title>01.파이토치 기초(PyTorch Basic)</title>
        <description>&lt;h2 id=&quot;02텐서-다루기tensor-manipulation1&quot;&gt;02.텐서 다루기(Tensor Manipulation)1&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;개요&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;벡터, 행렬, 텐서의 개념에 대해서 이해하고, Numpy와 파이토치로 벡터, 행렬, 텐서를 다루는 방법에 대해서 이해&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;벡터, 행렬 그리고 텐서(Vector, Matrix and Tensor)&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;넘파이 훑어보기(Numpy Review)&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;파이토치 텐서 선언하기(PyTorch Tensor Allocation)&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;행렬 곱셈(Maxtrix Multiplication)&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;다른 오퍼레이션들(Other Basic Ops)&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;021-벡터-행렬-그리고-텐서vector-matrix-and-tensor&quot;&gt;02.1. 벡터, 행렬 그리고 텐서(Vector, Matrix and Tensor)&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;1-벡터행렬텐서-그림으로-이해하기&quot;&gt;1) 벡터,행렬,텐서 그림으로 이해하기&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/pytorch_basic/0102_01.JPG&quot; alt=&quot;0102_01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;딥러닝을 하게 되면 다루게 되는 가장 기본적인 단위: 벡터, 행렬, 텐서&lt;/p&gt;

&lt;p&gt;스칼라 : 차원이 없는 값&lt;br /&gt;
벡터(Vector) : 1차원으로 구성된 값&lt;br /&gt;
행렬(Matrix) : 2차원으로 구성된 값
텐서(Tensor) : 3차원으로 구성된 값&lt;br /&gt;
4차원 : 텐서를 쌓아 올린거&lt;br /&gt;
5차원 : 4차원을 옆으로 확장한거&lt;br /&gt;
6차원 : 5차원을 뒤로 확장한 모습&lt;/p&gt;

&lt;h3 id=&quot;2-pytorch-tensor-shape-convention&quot;&gt;2) PyTorch Tensor Shape Convention&lt;/h3&gt;
&lt;p&gt;딥러닝을 할때 행렬,텐서의 크기를 고려하는 것은 항상 중요.&lt;br /&gt;
행렬과 텐서의 크기를 표현할 표기&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*2D Tensor(Typical Simple Setting)&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;t&lt;/td&gt;
      &lt;td&gt;= (batch_size,dim)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/pytorch_basic/0102_02.JPG&quot; alt=&quot;0102_02&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2차원 텐서의 크기 |t|를 (batch size x dimension)으로 표현&lt;br /&gt;
행의 크기 : batch_size&lt;br /&gt;
열의 크기 : dim&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*3D Tensor(Typical Computer Vision) - 비전 분야에서의 3차원 텐서&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;t&lt;/td&gt;
      &lt;td&gt;= (batch_size,width,height)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/pytorch_basic/0102_03.JPG&quot; alt=&quot;0102_03&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;일반적으로 비전 분야(이미지, 영상 처리)&lt;/p&gt;

&lt;p&gt;세로 : batch_size&lt;br /&gt;
가로 : 너비(width)&lt;br /&gt;
높이 : height&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*3D Tensor(Typical Natural Language Processing) - NLP 분야에서의 3차원 텐서&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;t&lt;/td&gt;
      &lt;td&gt;= (batch_size,length,dim)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/pytorch_basic/0102_04.JPG&quot; alt=&quot;0102_04&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자연어 처리 3차원 텐서(batch_size, 문장 길이, 단어 벡터의 차원) 사4&lt;/p&gt;

&lt;p&gt;세로 : batch_size&lt;br /&gt;
가로 : 너비(width)&lt;br /&gt;
높이 : height&lt;/p&gt;

&lt;h2 id=&quot;022-넘파이로-텐서-만들기벡터와-행렬-만들기&quot;&gt;02.2. 넘파이로 텐서 만들기(벡터와 행렬 만들기)&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;np.array(행렬)&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;1-1d-with-numpy&quot;&gt;1) 1D with Numpy&lt;/h3&gt;
&lt;p&gt;1차원 벡터&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;1차원 벡터의 차원과 크기 출력&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'차원 : '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 차원 : 1
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'크기: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 크기 : (7,)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;.ndim : 몇 차원인지를 출력&lt;/li&gt;
  &lt;li&gt;shape는 크기를 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1-1-numpy-기초-이해하기&quot;&gt;1-1) Numpy 기초 이해하기&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'t[0] t[1] t[-1] = '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# t[0] t[1] t[-1] =  0.0 1.0 6.0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;t[0] : index 0번째 원소
t[1] : index 1번째 원소
t[-1] : index -1번째 원소 –&amp;gt; 가장 뒤에(마지막) 원소&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;범위 지정으로 원소를 불러오기 : 슬라이싱(Slicing)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;t[시작 번호 : 끝 번호] : 시작 번호부터 끝 번호 전 번호까지&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# t : [0. 1. 2. 3. 4. 5. 6.]
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'t[2:5] t[4:-1]  = '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# t[2:5] = [2. 3. 4.]
# t[4:-1] = [4. 5.]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;시작 번호 또는 끝 번호를 생략해서 슬라이싱&lt;br /&gt;
[시작 번호:끝 번호]
&lt;strong&gt;시작 번호&lt;/strong&gt;가 생략 되어있으면 : 처음부터 끝번호까지&lt;br /&gt;
&lt;strong&gt;끝 번호&lt;/strong&gt;가 생략 되어있으면 : 시작번호부터 끝까지
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# t : [0. 1. 2. 3. 4. 5. 6.]
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'t[:2] t[3:] = '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# t[:2] = [0. 1. 2.]
# t[3:] = [3. 4. 5. 6.]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-2d-with-numpy&quot;&gt;2) 2D with Numpy&lt;/h3&gt;
&lt;p&gt;2차원 벡터&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;11.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[[ 1.  2.  3.]
 [ 4.  5.  6.]
 [ 7.  8.  9.]
 [10. 11. 12.]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2차원 벡터의 차원과 크기 출력&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'차원 : '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 차원 : 2
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'크기: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 크기 : (4,3)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;023-파이토치-텐서-선언하기pytorch-tensor-allocation&quot;&gt;02.3. 파이토치 텐서 선언하기(PyTorch Tensor Allocation)&lt;/h2&gt;
&lt;hr /&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;1-1d-with-pytorch&quot;&gt;1) 1D with PyTorch&lt;/h3&gt;
&lt;p&gt;파이토치로 1차원 행2&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 차원 : 1
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 크기 : [7]
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 크기 : [7]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 인덱스로 접근
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# 슬라이싱
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;# 슬라이싱
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor(0.) tensor(1.) tensor(6.)
tensor([2., 3., 4.]) tensor([4., 5.])
tensor([0., 1.]) tensor([3., 4., 5., 6.])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-2d-with-pytorch&quot;&gt;2) 2D with PyTorch&lt;/h3&gt;
&lt;p&gt;파이토치로 2차원 행렬&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;11.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 차원 : 2
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 크기 : [4,3]
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 크기 : [4,3]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;슬라이싱&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 첫번째 차원을 전체 선택한 상황에서 두번째 차원의 첫번째 것만 가져온다.
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# ↑ 위의 경우의 크기
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([ 2.,  5.,  8., 11.])
torch.Size([4])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;슬라이싱 첫번째 차원은 전부, 두번째 차원은 처음부터 맨마지막 열 전열까지&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[ 1.,  2.],
        [ 4.,  5.],
        [ 7.,  8.],
        [10., 11.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-브로드캐스팅broadcasting&quot;&gt;3) 브로드캐스팅(Broadcasting)&lt;/h3&gt;

&lt;p&gt;행렬의 덧셈/뺄셈 : 행렬의 크기가 같아야함&lt;br /&gt;
행렬의 곱셈 : 앞 행렬의 마지막 차원 = 뒤 행렬의 마지막 차원 일치해야함&lt;/p&gt;

&lt;p&gt;파이토치에서는 자동으로 행렬의 크기를 맞춰서 연산을 수행 : &lt;strong&gt;브로드캐스팅&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Vector + scalar
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# [3] -&amp;gt; [3, 3]
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# [1, 2] + [3, 3]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[4., 5.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 2 x 1 Vector + 1 x 2 Vector
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# [[1, 2], [1, 2]]
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# [[3, 3], [4, 4]]
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# [[1+3, 2+3], [1+4, 2+4]]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([4., 5.],
       [5., 6.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;브로드캐스팅은 편리하지만, 자동으로 실행되는 기능이므로 주의가 필요 : 오류를 발생하지 않고 진행되기 때문에 실수를 넘겨버리고 결과가 바뀔수도 있음, 오류를 찾는것이 쉽지 않을 수 있음.&lt;/p&gt;

&lt;h3 id=&quot;4-자주-사용되는-기능들&quot;&gt;4) 자주 사용되는 기능들&lt;/h3&gt;

&lt;h4 id=&quot;4-1-행렬-곱셈과-원소별-곱셈의-차이matrix-multiplication-vs-multiplication&quot;&gt;4-1) 행렬 곱셈과 원소별 곱셈의 차이(Matrix Multiplication Vs. Multiplication)&lt;/h4&gt;
&lt;p&gt;행렬 곱셈(.matmul)&lt;br /&gt;
원소 별 곱셈(.mul)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;파이토치 텐서의 행렬 곱셈&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'m1 행렬의 크기: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2 x 2
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'m2 행렬의 크기: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2 x 1
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'m1과m2 곱'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matmul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2 x 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;$$ \begin{pmatrix} 1 &amp;amp; 2 \\ 3 &amp;amp; 4  \end{pmatrix} \begin{pmatrix} 1 \\ 2 \end{pmatrix} = \begin{pmatrix} 5 \\ 11 \end{pmatrix}$$&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Shape of Matrix 1:  torch.Size([2, 2])
Shape of Matrix 2:  torch.Size([2, 1])
tensor([[ 5.],
        [11.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;파이토치 텐서의 Element-wise 곱셈&lt;/strong&gt;
일한 크기의 행렬이 동일한 위치에 있는 원소끼리 곱&lt;br /&gt;
서로 다른 크기의 행렬일 경우 브로드캐스팅이 된 후에 element-wise 곱셈이 수행&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# [[1, 1], [2, 2]]
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Shape of Matrix 1: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2 x 2
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Shape of Matrix 2: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2 x 1
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# = print(m1.mul(m2))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;$$ \begin{pmatrix} 1 &amp;amp; 2 \\ 3 &amp;amp; 4  \end{pmatrix} * \begin{pmatrix} 1 &amp;amp; 1\\ 2 &amp;amp; 2 \end{pmatrix} = \begin{pmatrix} 1 &amp;amp; 2\\ 6 &amp;amp; 8 \end{pmatrix}$$&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Shape of Matrix 1:  torch.Size([2, 2])
Shape of Matrix 2:  torch.Size([2, 1])
tensor([[1., 2.],
        [6., 8.]])
tensor([[1., 2.],
        [6., 8.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-2-덧셈sum과-평균mean&quot;&gt;4-2) 덧셈(Sum)과 평균(Mean)&lt;/h4&gt;
&lt;p&gt;덧셈
dim=0 : 첫번째 차원(=행)을 의미
dim=1 : 두번째 차원(=열)을 의미
dim=-1 : 마지막 차원을 의미&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 단순히 원소 전체의 덧셈을 수행
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 행을 제거, 열을 기준으로 덧셈
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 열을 제거, 행을 기준으로 덧셈
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 열을 제거(마지막 차원 제거)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor(10.)
tensor([4., 6.])
tensor([3., 7.])
tensor([3., 7.])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;평균&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 1.5000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 단순히 원소 전체의 평균 수행
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 행을 제거, 열을 기준으로 평균
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 열을 제거, 행을 기준으로 평균
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 열을 제거(마지막 차원 제거)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor(2.5000)  # 10/4
tensor([2., 3.])  # (1+3)/2, (2+4)/2
tensor([1.5000, 3.5000])  # (1+2)/2, (3+4)/2
tensor([1.5000, 3.5000])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-3-max와-argmax&quot;&gt;4-3) Max와 ArgMax&lt;/h4&gt;

&lt;p&gt;최대(Max): 원소의 최대값을 리턴&lt;br /&gt;
아그맥스(ArgMax): 최대값을 가진 인덱스를 리턴&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FloatTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 원소 중 최대값인 4를 리턴
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tensor([[1., 2.],
        [3., 4.]])
tensor(4.)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;dim=0 : 첫번째 차원을 제거&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(tensor([3., 4.]), tensor([1, 1]))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;max에 dim 인자를 주면 argmax도 함께 리턴&lt;br /&gt;
tensor([3., 4.])는 가장 큰값을 갖는 행렬을 리턴
tensor([1, 1])는 가장 큰값을 갖는 위치를 리턴 : 첫번째 열에서 3의 인덱스는 1, 두번째 열에서 4의 인덱스는 1 –&amp;gt; [1, 1]&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Max: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Argmax: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Max:  tensor([3., 4.])
Argmax:  tensor([1, 1])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(tensor([2., 4.]), tensor([1, 1]))
(tensor([2., 4.]), tensor([1, 1]))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이어서 텐서를 조작하는 방법을 알아본다, 텐서 차원 변경, 크기변경, View, Squeeze, Unsqueeze, Concatenate, Stacking, In-place&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/library/2021-01-27-01_02_%ED%85%90%EC%84%9C%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B01/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/library/2021-01-27-01_02_%ED%85%90%EC%84%9C%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B01/</guid>
        
        <category>PyTorch</category>
        
        
        <category>blog</category>
        
        <category>library</category>
        
      </item>
    
      <item>
        <title>01.파이토치 기초(PyTorch Basic)</title>
        <description>&lt;h2 id=&quot;01파이토치-패키지의-기본-구성&quot;&gt;01.파이토치 패키지의 기본 구성&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;다음은 파이토치 패키지의 전반적인 구성&lt;/p&gt;

&lt;h2 id=&quot;011-torch&quot;&gt;01.1. torch&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;메인 네임스페이스.&lt;br /&gt;
텐서 등의 다양한 수학 함수가 포함되어져 있으며 Numpy와 유사한 구조를 가짐&lt;/p&gt;

&lt;h2 id=&quot;012-torchautograd&quot;&gt;01.2. torch.autograd&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;자동 미분을 위한 함수들이 포함되어져 있음.&lt;br /&gt;
자동 미분의 on/off를 제어하는 enable_grad, no_grad&lt;br /&gt;
자체 미분 가능 함수를 정의할 때 사용하는 기반 클래스인 ‘Function’등이 포함되어져 있음.&lt;/p&gt;

&lt;h2 id=&quot;013-torchnn&quot;&gt;01.3. torch.nn&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;신경망을 구축하기 위한 다양한 데이터 구조나 레이어 등이 정의되여져 있음.&lt;/p&gt;

&lt;h2 id=&quot;014-torchopim&quot;&gt;01.4. torch.opim&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;확률적 경사 하강법(Stochastic Gradient Descent,SGD)를 중심으로 한 파라미터 최적화 알고리즘이 구현되어져 있음.&lt;/p&gt;

&lt;h2 id=&quot;015-torchutilsdata&quot;&gt;01.5. torch.utils.data&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;SGD의 반복 연산을 실행할 때 사용하는 미니 배치용 유틸리티 함수가 포함되여져 있음.&lt;/p&gt;

&lt;h2 id=&quot;016-torchonnx&quot;&gt;01.6. torch.onnx&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;ONNX(Open Neural Network Exchange)의 포맷으로 모델을 익스포트(export)할 때 사용&lt;br /&gt;
ONNX는 서로 다른 딥 러닝 프레임워크 간에 모델을 공유할 때 사용하는 포멧&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/library/2021-01-27-01_01_%ED%8C%8C%EC%9D%B4%ED%86%A0%EC%B9%98_%ED%8C%A8%ED%82%A4%EC%A7%80%EC%9D%98_%EA%B8%B0%EB%B3%B8%EA%B5%AC%EC%84%B1/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/library/2021-01-27-01_01_%ED%8C%8C%EC%9D%B4%ED%86%A0%EC%B9%98_%ED%8C%A8%ED%82%A4%EC%A7%80%EC%9D%98_%EA%B8%B0%EB%B3%B8%EA%B5%AC%EC%84%B1/</guid>
        
        <category>PyTorch</category>
        
        
        <category>blog</category>
        
        <category>library</category>
        
      </item>
    
      <item>
        <title>streamlit</title>
        <description>&lt;h2 id=&quot;개쩌는-파이썬-라이브러리-발견&quot;&gt;개쩌는 파이썬 라이브러리 발견&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#개쩌는-파이썬-라이브러리-발견&quot; id=&quot;markdown-toc-개쩌는-파이썬-라이브러리-발견&quot;&gt;개쩌는 파이썬 라이브러리 발견&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#streamlit&quot; id=&quot;markdown-toc-streamlit&quot;&gt;streamlit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#웹-deploy하기&quot; id=&quot;markdown-toc-웹-deploy하기&quot;&gt;웹 deploy하기&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#내가-만든-페이지이다-확인-ㄱ&quot; id=&quot;markdown-toc-내가-만든-페이지이다-확인-ㄱ&quot;&gt;내가 만든 페이지이다. 확인 ㄱ&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot; id=&quot;markdown-toc-reference&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;streamlit&quot;&gt;streamlit&lt;/h2&gt;

&lt;p&gt;데이언트 사이언스 웹앱을 단 몇분만에 만들수있는 파이썬 라이브러리를 알게 되었다.&lt;/p&gt;

&lt;p&gt;단순히 import streamlit 을 하고&lt;/p&gt;

&lt;p&gt;터미널 창에 streamlit run 파일이름.py만 해주면 자신의 로컬에서 웹으로 깔끔하게 디자인된 데이터 분석 이미지가 들어있는 웹을 볼수 있다.&lt;/p&gt;

&lt;p&gt;그전에는 저장해둔 colab이나 matplotlib으로 보인 이미지를 저장하여 ppt등 첨부하였지만 이제는 아예 웹으로 보여줄수 있다!!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;streamlit 사이트&lt;/strong&gt; :&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.streamlit.io/&quot;&gt;streamlit 사이트&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;웹-deploy하기&quot;&gt;웹 deploy하기&lt;/h2&gt;

&lt;p&gt;하지만 로컬에서만 볼수 있다면 또 보여주기 위해서 터미널을 키고 명령어를 쳐야한다면…. 굳이? 뭐하러? 라는 생각이 듣다.&lt;/p&gt;

&lt;p&gt;나는 어디서든 현재 이 포스팅에서도 내가 만든것을 주소 링크를 첨부해서 보여주고 싶다.&lt;/p&gt;

&lt;p&gt;무료로 내 웹을 Deploy해보자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/library/streamlit01.JPG&quot; alt=&quot;그림1&quot; height=&quot;500px&quot; /&gt;
&lt;img src=&quot;/assets/img/Blog/library/streamlit02.JPG&quot; alt=&quot;그림2&quot; height=&quot;500px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;내가-만든-페이지이다-확인-ㄱ&quot;&gt;내가 만든 페이지이다. 확인 ㄱ&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://btcsamsungapp.herokuapp.com/&quot;&gt;https://btcsamsungapp.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;단 한 파일로 몇줄의 코드로 구현할수 있다는게 정말 놀랍다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;streamlit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cryptocmd&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CmcScraper&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas_datareader&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdr&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.express&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'# 비트코인 데이터 Web app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sidebar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sidebar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BTC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ETH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'USDT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sevendayago&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;start_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sidebar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Start date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sevendayago&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sidebar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'End date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# https://coinmarketcap.com
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scraper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CmcScraper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%d-%m-%Y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%d-%m-%Y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scraper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_dataframe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fig_close&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Open'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'High'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Low'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Close'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'가격'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig_volume&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Volume'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Volume'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plotly_chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig_close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plotly_chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig_volume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;



&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'''
# 삼성전자 주식 데이터
마감 가격과 거래량을 차트로 보여줍니다!
'''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# https://finance.yahoo.com/quote/005930.KS?p=005930.KS
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_data_yahoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'005930.KS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line_chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line_chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Volume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위에는 코드이다. 정말 이것만 있으면 로컬에서는 볼수있다. 로컬에서 보는것도 놀랍긴하다.&lt;/p&gt;

&lt;p&gt;하지만 말했듯이 나는 무료로 deploy하고 싶다&lt;/p&gt;

&lt;p&gt;그렇다면 아래 첨부 영상을 보면 된다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dashboard.heroku.com/&quot;&gt;Heroku&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;필요한 파일들은 내 git repo에서 다운받으면 되겠다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/khw11044/second-streamlit-app&quot;&gt;내 레파지토리&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=JLVB8ZUPojw&quot;&gt;빵형의 개발도상국&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Jan 2021 02:45:51 +0900</pubDate>
        <link>http://localhost:4000/blog/library/2021-01-19-streamlit/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/library/2021-01-19-streamlit/</guid>
        
        <category>streamlit</category>
        
        <category>python</category>
        
        
        <category>blog</category>
        
        <category>library</category>
        
      </item>
    
      <item>
        <title>파이토치 기초(PyTorch Basic)</title>
        <description>&lt;h2 id=&quot;011-파이토치-패키지의-기본-구성&quot;&gt;01.1 파이토치 패키지의 기본 구성&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;공부 사이트, 참고 사이트 :&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://wikidocs.net/book/2788&quot;&gt;PyTorch로 시작하는 딥러닝 입문&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#011-파이토치-패키지의-기본-구성&quot; id=&quot;markdown-toc-011-파이토치-패키지의-기본-구성&quot;&gt;01.1 파이토치 패키지의 기본 구성&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-torch&quot; id=&quot;markdown-toc-1-torch&quot;&gt;1. torch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-torchautograd&quot; id=&quot;markdown-toc-2-torchautograd&quot;&gt;2. torch.autograd&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-torchnn&quot; id=&quot;markdown-toc-3-torchnn&quot;&gt;3. torch.nn&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-torchoptim&quot; id=&quot;markdown-toc-4-torchoptim&quot;&gt;4. torch.optim&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-torchutilsdata&quot; id=&quot;markdown-toc-5-torchutilsdata&quot;&gt;5. torch.utils.data&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6-torchonnx&quot; id=&quot;markdown-toc-6-torchonnx&quot;&gt;6. torch.onnx&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#이어서-공부는-ipynb을-이용해서-git-repo에-올려서-공부&quot; id=&quot;markdown-toc-이어서-공부는-ipynb을-이용해서-git-repo에-올려서-공부&quot;&gt;이어서 공부는 ipynb을 이용해서 git repo에 올려서 공부&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot; id=&quot;markdown-toc-reference&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1-torch&quot;&gt;1. torch&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;메인 네임스페이스, 텐서 등의 다양한 수학 함수가 포함되어져 있으며  NumPy와 유사한 구조를 가짐&lt;/p&gt;

&lt;h3 id=&quot;2-torchautograd&quot;&gt;2. torch.autograd&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;자동 미분을 위한 함수들이 포함되어져 있음.
자동 미분의 on/off를 제어하는 콘텍스트 매너저(enable_grad/no_grad)나 자체 미분 가능 함수를 정의할 때 사용하는 기반 클래스인 ‘Function’등이 포함되어져 있음.&lt;/p&gt;

&lt;h3 id=&quot;3-torchnn&quot;&gt;3. torch.nn&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;신경망을 구축하기 위한 다양한 데이터 구조나 레이어 등이 정의되어져 있습니다. 레이어(RNN,LSTM등과 같은), 활성화 함수(ReLU와 같은), 손실함수(MSE Loss와 같은)들이 있음.&lt;/p&gt;

&lt;h3 id=&quot;4-torchoptim&quot;&gt;4. torch.optim&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;확률적 경사 하강법(Stochastic Gradient Descent,SGD)를 중심으로 한 파라미터 최적화 알고리즘이 구현되어져 있음.&lt;/p&gt;

&lt;h3 id=&quot;5-torchutilsdata&quot;&gt;5. torch.utils.data&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;SGD의 반복 연산을 실행할 때 사용하는 미니 배치용 유틸리티 함수가 포함되어져 있음&lt;/p&gt;

&lt;h3 id=&quot;6-torchonnx&quot;&gt;6. torch.onnx&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;ONNX(Open Neural Network Exchange)의 포멧으로 모델을 익스포트(export)할 때 사용. ONNX는 서로 다른 딥 러닝 프레임워크간에 모델을 공유할 때 사용하는 포멧.&lt;/p&gt;

&lt;h3 id=&quot;이어서-공부는-ipynb을-이용해서-git-repo에-올려서-공부&quot;&gt;이어서 공부는 ipynb을 이용해서 git repo에 올려서 공부&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/khw11044/pytorch_tutorial&quot;&gt;내 repository&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;파이토치 기초&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;텐서 조작하기1&lt;/li&gt;
      &lt;li&gt;텐서 조작하기2&lt;/li&gt;
      &lt;li&gt;파이썬 클래스&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;선형회귀&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;자동미분&lt;/li&gt;
      &lt;li&gt;단순 선형회귀&lt;/li&gt;
      &lt;li&gt;다중 선형회귀&lt;/li&gt;
      &lt;li&gt;nn.Module로 구현하는 선형회귀&lt;/li&gt;
      &lt;li&gt;클래스로 파이토치 모델 구현하기&lt;/li&gt;
      &lt;li&gt;미니배치와 데이터로드&lt;/li&gt;
      &lt;li&gt;커스텀 데이터셋&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://www.hanbit.co.kr/store/books/look.php?p_code=B7818450418&quot;&gt;파이토치 첫걸음&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Jan 2021 02:45:51 +0900</pubDate>
        <link>http://localhost:4000/blog/library/2021-01-19-pytorch-dl-01/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/library/2021-01-19-pytorch-dl-01/</guid>
        
        <category>pytorch</category>
        
        <category>python</category>
        
        
        <category>blog</category>
        
        <category>library</category>
        
      </item>
    
      <item>
        <title>Concept Ml</title>
        <description>&lt;p&gt;머신러닝 용어 정리&lt;/p&gt;

&lt;p&gt;군집화(CLustering)&lt;/p&gt;

&lt;p&gt;결정트리&lt;/p&gt;

&lt;p&gt;SVM&lt;/p&gt;

&lt;p&gt;베이즈 네트워크&lt;/p&gt;

&lt;p&gt;마코프 모델&lt;/p&gt;

&lt;p&gt;PCA&lt;/p&gt;

&lt;p&gt;MLP&lt;/p&gt;

&lt;p&gt;MLE&lt;/p&gt;

&lt;p&gt;최대우도 방법&lt;/p&gt;

&lt;p&gt;로그우도&lt;/p&gt;

&lt;p&gt;확률 분포 추정&lt;/p&gt;

&lt;p&gt;베이시안 분류&lt;/p&gt;

&lt;p&gt;공분산&lt;/p&gt;

&lt;p&gt;아이겐 벡터, 아이겐 벨류&lt;/p&gt;

&lt;p&gt;조건부 확률&lt;/p&gt;

&lt;p&gt;K-NN&lt;/p&gt;

&lt;p&gt;K-means&lt;/p&gt;

&lt;p&gt;선형분별 분석&lt;/p&gt;

&lt;p&gt;마할라노비스 거리&lt;/p&gt;

&lt;p&gt;유클리디언 거리&lt;/p&gt;

&lt;p&gt;이상 감지&lt;/p&gt;

&lt;p&gt;최소거리분류기&lt;/p&gt;

&lt;p&gt;파젠 창&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/mldl/2021-01-19-concept-ml/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/mldl/2021-01-19-concept-ml/</guid>
        
        <category>ML</category>
        
        
        <category>blog</category>
        
        <category>mldl</category>
        
      </item>
    
      <item>
        <title>Concept Dl</title>
        <description>&lt;p&gt;딥러닝 용어 정리&lt;/p&gt;

&lt;p&gt;딥러닝 용어 사전&lt;/p&gt;

&lt;p&gt;DeepLearning&lt;/p&gt;

&lt;p&gt;노드&lt;/p&gt;

&lt;p&gt;가중치&lt;/p&gt;

&lt;p&gt;바이어스&lt;/p&gt;

&lt;p&gt;활성화 함수&lt;/p&gt;

&lt;p&gt;ReLU&lt;/p&gt;

&lt;p&gt;LeakyReLU&lt;/p&gt;

&lt;p&gt;PReLU&lt;/p&gt;

&lt;p&gt;MaxOut&lt;/p&gt;

&lt;p&gt;sigmoid&lt;/p&gt;

&lt;p&gt;softmax&lt;/p&gt;

&lt;p&gt;선형 회귀&lt;/p&gt;

&lt;p&gt;로지스틱 회귀&lt;/p&gt;

&lt;p&gt;스프트맥스 회귀&lt;/p&gt;

&lt;p&gt;분류&lt;/p&gt;

&lt;p&gt;편차(Deviation)&lt;/p&gt;

&lt;p&gt;잔차&lt;/p&gt;

&lt;p&gt;오차&lt;/p&gt;

&lt;p&gt;Gradient Descent&lt;/p&gt;

&lt;p&gt;Adam&lt;/p&gt;

&lt;p&gt;Momentum&lt;/p&gt;

&lt;p&gt;RMSProp&lt;/p&gt;

&lt;p&gt;Vanshing Gradient&lt;/p&gt;

&lt;p&gt;Overfitting&lt;/p&gt;

&lt;p&gt;Blackbox&lt;/p&gt;

&lt;p&gt;end-to-end&lt;/p&gt;

&lt;p&gt;Forward Propagation&lt;/p&gt;

&lt;p&gt;Backward Propagation&lt;/p&gt;

&lt;p&gt;Perceptron&lt;/p&gt;

&lt;p&gt;Dropout&lt;/p&gt;

&lt;p&gt;Fine Tuning&lt;/p&gt;

&lt;p&gt;pruning&lt;/p&gt;

&lt;p&gt;Transfer Learning&lt;/p&gt;

&lt;p&gt;GAN&lt;/p&gt;

&lt;p&gt;DeepLearning Quantization&lt;/p&gt;

&lt;p&gt;meta learning&lt;/p&gt;

&lt;p&gt;matching network&lt;/p&gt;

&lt;p&gt;vot&lt;/p&gt;

&lt;p&gt;object detection&lt;/p&gt;

&lt;p&gt;RBM(Restricted Boltzmann Machine)&lt;/p&gt;

&lt;p&gt;원 핫 인코딩&lt;/p&gt;

&lt;p&gt;평균 제곱 오차 (Mean squared error: MSE)&lt;/p&gt;

&lt;p&gt;크로스 엔트로피 함수(Cross-entropy function)&lt;/p&gt;

&lt;p&gt;Loss Function&lt;/p&gt;

&lt;p&gt;Cost Function&lt;/p&gt;

&lt;p&gt;자코비안&lt;/p&gt;

&lt;p&gt;합성곱 신경망(Convolutional neural network)&lt;/p&gt;

&lt;p&gt;채널(Channel)&lt;/p&gt;

&lt;p&gt;패딩(Padding)&lt;/p&gt;

&lt;p&gt;풀링(Pooling)&lt;/p&gt;

&lt;p&gt;스트라이드(Stride)&lt;/p&gt;

&lt;p&gt;순환 신경망(Recurrent neural network)&lt;/p&gt;

&lt;p&gt;생산적 적대 신경망(Generative adversarial network)&lt;/p&gt;

&lt;p&gt;그래프 신경망(Graph neural network)&lt;/p&gt;

&lt;p&gt;지도학습&lt;/p&gt;

&lt;p&gt;비지도학습&lt;/p&gt;

&lt;p&gt;준지도학습&lt;/p&gt;

&lt;p&gt;강화학습&lt;/p&gt;

&lt;p&gt;Chain Rule(연쇄법칙)&lt;/p&gt;

&lt;p&gt;(Explainable artificial intelligence : EAI)&lt;/p&gt;

&lt;p&gt;AutoEncoder&lt;/p&gt;

&lt;p&gt;정규화&lt;/p&gt;

&lt;p&gt;Regularization&lt;/p&gt;

&lt;p&gt;L1 Regularization&lt;/p&gt;

&lt;p&gt;L2 Regularization&lt;/p&gt;

&lt;p&gt;Normalization&lt;/p&gt;

&lt;p&gt;scaling&lt;/p&gt;

&lt;p&gt;L1 Norm&lt;/p&gt;

&lt;p&gt;L2 Norm&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/mldl/2021-01-19-concept-dl/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/mldl/2021-01-19-concept-dl/</guid>
        
        <category>DL</category>
        
        
        <category>blog</category>
        
        <category>mldl</category>
        
      </item>
    
      <item>
        <title>2021년 1월 18일</title>
        <description>&lt;h2 id=&quot;다시-목표&quot;&gt;다시 목표&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;패턴인식 한 주에 한단원씩 다시 공부 꼼꼼히
    &lt;ul&gt;
      &lt;li&gt;ppt 만들고 설명할수 있을만큼 보고, 영상도 찍기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;리액트 공부
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.inflearn.com/users/113211&quot;&gt;리액트 강의&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pytorch 공부&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파이썬 자료구조, 알고리즘 공부&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;논문 읽기&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;sometimes you gotta run before you can walk
아이언맨 1에&amp;gt; -토니 스타크-&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 18 Jan 2021 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/etc/diary/2021-01-18-monday/</link>
        <guid isPermaLink="true">http://localhost:4000/etc/diary/2021-01-18-monday/</guid>
        
        
        <category>etc</category>
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>내 연구</title>
        <description>&lt;p&gt;…를 정해야하는데…&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Jan 2021 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/study/2021-01-15-%EC%97%B0%EA%B5%AC/</link>
        <guid isPermaLink="true">http://localhost:4000/study/2021-01-15-%EC%97%B0%EA%B5%AC/</guid>
        
        <category>paper</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>제 1회 KUIAI 대회</title>
        <description>&lt;h1 id=&quot;제-1회-kuiai-대회&quot;&gt;제 1회 KUIAI 대회&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/ku.jpg&quot; alt=&quot;고려대학부생해커톤&quot; width=&quot;400&quot; height=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;p&gt;졸업전 산공 친구들과 추억을 쌓기위해 즉흥적으로 지원한 해커톤이였다.&lt;/p&gt;

&lt;p&gt;하루만에 끝나는 대회여서 부담이 없었다.&lt;/p&gt;

&lt;p&gt;하지만 어떤 데이터로 무엇을 하는지, 대회의 어떤 목표도 모른채 참여하게되었다.&lt;/p&gt;

&lt;p&gt;10시부터 12시까지 대회 소개 및 설명이였는데…&lt;/p&gt;

&lt;p&gt;정말 운영진 분들이 처음하는게 느껴졌다. zoom으로 하는데 영상도 안틀어지고, ppt도 보는데 굉장한 시간이 걸렸었다.&lt;/p&gt;

&lt;p&gt;참여팀은 대략 20팀? 그중에 탈주한 팀도 있었고….&lt;/p&gt;

&lt;p&gt;아마 제대로 한팀은 몇 팀 없었다. 오후 12시에 시작해서 다음날 12시까지 제출로 24시간 타임어택 해커톤인데. 11시45분까지 제출한팀이 2팀뿐이였다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.youtube.com/watch?v=9UuEUZ8QUe8&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;iframe src=&quot;https://www.youtube.com/embed/&quot; width=&quot;600&quot; height=&quot;320&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;주관 및 지원은 고려대학교, 사람투자, 한국산업기술진흥원, 한국전자기술연구원 이였다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;hackathon&quot;&gt;Hackathon:&lt;/h2&gt;
&lt;h2 id=&quot;anomaly-detection이상-탐지-in-industrial-envirioment&quot;&gt;Anomaly Detection(이상 탐지) in industrial envirioment&lt;/h2&gt;

&lt;p&gt;대회 당일 홈페이지를 알려주었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.kamp-ai.kr/front/main/MAIN.01.01.jsp&quot;&gt;데이터를 다운받은 사이트&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/8.JPG&quot; alt=&quot;8&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;데이터셋에는 코드도 들어있고 csv 데이터도 들어있었다.&lt;br /&gt;
처음부터 하는것이 아니고 주어진 데이터를 수정하는거라서 다행이다 느꼈었다…처음에는&lt;br /&gt;
가이드북은 정말 세세하게 개념과 목표 이유, 데이터 소개, 코드 설명등 꼼꼼히 되어있었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;여기서 &lt;code&gt;&lt;b&gt;제조 AI 데이터셋&lt;/b&gt;&lt;/code&gt; 목록에 사출성형기 AI 데이터셋, 용해탱크 AI 데이터셋을 다운받고 데이터를 분석한 다음 3가지 목표를 이루는 것이였다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;높은 검출 성능&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;빠른 학습 및 판단속도&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;가벼운 모델크기&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;1-industiral-artificial-inteligence&quot;&gt;1. Industiral Artificial Inteligence&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1.1 Autonomous factory&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1.2 제조 AI 및 스마트공장 적용 현실&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;주제는 크게 Industrial Artificial Inteligence로 IAI분야에서 Autonomous factory가 1차, 2차, 3차 산업혁명을 거치고 4차 산업혁명에서 Connectivity와 Benefits, Technology, Investment 관점에서 설명을 들었었다.&lt;/p&gt;

&lt;p&gt;현재 인공지능의 발전으로 여러 이론을 대입하여 공장에 적용하였지만 제조 AI및 스마트공장 적용 현실은 항상 완벽하지 못하고 있고 ceo는 그 성능에 실망하고 AI 도입을 철회하거나 미룬다고 하였다.&lt;/p&gt;

&lt;h2 id=&quot;2-industiral-ai-problem&quot;&gt;2. Industiral AI Problem&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;2.1 라벨링 데이터의 부제&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2.2 데이터 불균형의 문제&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2.3 컴퓨터 성능 및 제조환경문제&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2.4 검출 성능 문제&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;21-라벨링-데이터의-부제&quot;&gt;2.1 라벨링 데이터의 부제&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/1_wulmkxtly.JPG&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/2_ilvwcmzzm.JPG&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;좋은 머신러닝 모델을 만드려면 높은 수준의 학습 데이터가 필요&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;산업 현장 데이터는 자동으로 방대한 데이터가 쏟아지기 때문에 데이터를 라벨링하기가 어려움&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;22-데이터-불균형의-문제&quot;&gt;2.2 데이터 불균형의 문제&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/3.JPG&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;라벨링을 어렵게 진행하더라도 데이터 불균형의 문제 발생&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대부분의 공장 및 설비는 정상동작을 수행함&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비정상 사례가 발생하는 빈도수가 극히 낮음&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비정상 사례가 발생하더라도 발생 시각 및 유형을 선별하고 데이터로 저장하기 ㅇ려움&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;23-컴퓨터-성능-및-제조환경문제&quot;&gt;2.3 컴퓨터 성능 및 제조환경문제&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;딥러닝 기반 모델 학습 시 학습시간이 오랴 ㄱㄹ림&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;공정이 변화되거나 센서 부착위치가 변경되면 재학습이 필요&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;센서/설비 별 학습모델이 관리되어야 하는데 모델의 크기가 클 경우 컴퓨팅 용량문제가 발생할수 있음&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;학습시간 및 판단시간이 느리면 실제 서비스에서 활용되기 어려움에&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;b&gt;실 적용가능한 AI는 학습 및 판단속도가 굉장히 빠르고 모델의 용량도 가벼워야함&lt;/b&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;24-검출-성능-문제&quot;&gt;2.4 검출 성능 문제&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;산업현장에서는 검출결과에 따른 설비정지/정비가 이뤄지기 때문에 검출성능이 아주 좋아야 실제 적용 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;검출성능이 좋지 못하면 생산성 저하 및 점검 시간 증대로 역효과 발생 가능성이 높음&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-anomaly-detection&quot;&gt;3. Anomaly Detection&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;3.1 Anomaly Detection&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3.2 Anomaly Detection Method&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3.3 Outlier Detection / Novelty Detection&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;31-anomaly-detection&quot;&gt;3.1 Anomaly Detection&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/4_0.JPG&quot; alt=&quot;4_0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/5.JPG&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/6.JPG&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/4.JPG&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;제조 현장에서 이상감지는 설비의 이상을 감지하거나 생산제품 또는 제조환경의 이상을 감지하는 것을 의미함&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대부분 정상가공 또는 정상상태이지만, 특정상황에서 이상이 발생되고 이는 자동화라인 정지, 연속 불량 생산 등의 심대한 손해를 발생시킴&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;32-anomaly-detection-method&quot;&gt;3.2 Anomaly Detection Method&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Tree-based: &lt;b&gt;Isolation-forest&lt;/b&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/5_tanaql0tt.JPG&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://partrita.github.io/posts/isolation-forest/&quot;&gt;isolation-forest관련 블로그&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://john-analyst.medium.com/isolation-forest%EB%A5%BC-%ED%86%B5%ED%95%9C-%EC%9D%B4%EC%83%81%ED%83%90%EC%A7%80-%EB%AA%A8%EB%8D%B8-9b10b43eb4ac&quot;&gt;isolation-forest관련 블로그&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reconstruct-based: &lt;b&gt;AutoEncoder&lt;/b&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/6_ep440qtvq.JPG&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SVM-based: &lt;b&gt;One-class SVM&lt;/b&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/7.JPG&quot; alt=&quot;7&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;33-outlier-detection--novelty-detection&quot;&gt;3.3 Outlier Detection / Novelty Detection&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/9.JPG&quot; alt=&quot;9&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Semi-Supervised (Novelty Detection)
    &lt;ul&gt;
      &lt;li&gt;Only nomarl data available to train&lt;/li&gt;
      &lt;li&gt;normal data only&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Unsupervised (Outlier Detection)
    &lt;ul&gt;
      &lt;li&gt;no labels&lt;/li&gt;
      &lt;li&gt;nomarl + abnormal data&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;실 산업현장에서 얻은 데이터는 실제 데이터셋이 Novelty 환경인 경우가 많음 (정상만 있는 데이터 셋)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;정상만 있는 데이터 셋에서 불량을 검출하는 경우에는 Isolation Forest등의 &lt;em&gt;&lt;b&gt;알고리즘 검출 성능이 좋지 않음&lt;/b&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-goal&quot;&gt;4. Goal&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;High-performance Anomaly Detection in Nobelty&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;주어진 데이터 셋에서 정상만 가지고 학습한 뒤 정상/비정상을 판단&lt;/li&gt;
  &lt;li&gt;데이터의 특성(다중클래스, 초코차원 데이터)에 따라 각기 다른 결과물이 나오기 때문에 데이터의 특성 분석 필요&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;신규 알고리즘을 개발(통계기반, 머신러닝, 딥러닝 상관없음)하거나, 기존 Anomaly Detection에 활용되는 알고리즘 조합 및 프로세스 변경 등의 다양한 접근&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;목표
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;높은 검출 성능&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;빠른 학습 및 판단속도&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;가벼운 모델크기&lt;/strong&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3가지를 목표로 최대한의 결과 도출&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;검증방법&lt;/strong&gt;
      &lt;ul&gt;
        &lt;li&gt;검출검증 : 적용 알고리즘의 AUROC 수치, 언노멀 스코어 시각화, 혼동행렬(Confusion Matrix) 등으로 성능 검증&lt;/li&gt;
        &lt;li&gt;속도검증 : 학습 데이터 수량, 데이터 차원, 컴퓨터자원(CPU,RAM)을 명시하고 학습시간과 예측시간으로 성능검증&lt;/li&gt;
        &lt;li&gt;모델크기 : 필수 검증사항은 아니지만, 학습된 모델의 크기를 표시&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;

&lt;p&gt;어려웠다… 이쪽분야를 전혀 모르고 있었다.&lt;/p&gt;

&lt;p&gt;새로 배운게 많고 느슨했던 나의 열정이 다시 깨어난거 같다.&lt;/p&gt;

&lt;p&gt;PCA, SVM, AutoEncoder, Anomaly Detection, Outlier Detection / Novelty Detection, Isolation-forest, Minimum Covariance Determinant Method 등 배워야할게 많아졌다.&lt;/p&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;코드공유&quot;&gt;&lt;a href=&quot;https://github.com/khw11044/KUIAI_v1&quot;&gt;코드공유&lt;/a&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/asd.png&quot; alt=&quot;다운로드asd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/pca3차원.JPG&quot; alt=&quot;pca3차원&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/pca2차원.JPG&quot; alt=&quot;pca2차원&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/n3.JPG&quot; alt=&quot;n3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/n2.JPG&quot; alt=&quot;n2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/n1.JPG&quot; alt=&quot;n1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/c1.JPG&quot; alt=&quot;c1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/k1.JPG&quot; alt=&quot;k1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/b2.JPG&quot; alt=&quot;b2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/b1.JPG&quot; alt=&quot;b1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/project/1kuiai/aaa_hd2eim8ps.JPG&quot; alt=&quot;aaa&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;공부해야할-블로그&quot;&gt;공부해야할 블로그&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gaussian37.github.io/ml-concept-ml-evaluation/#roc%EC%99%80-auc-1&quot;&gt;https://gaussian37.github.io/ml-concept-ml-evaluation/#roc%EC%99%80-auc-1&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Jan 2021 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/project/2021-01-15-KUIAI/</link>
        <guid isPermaLink="true">http://localhost:4000/project/2021-01-15-KUIAI/</guid>
        
        <category>AnomalyDetection</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>2021년 1월 13일</title>
        <description>&lt;h2 id=&quot;marc-allante&quot;&gt;Marc Allante&lt;/h2&gt;

&lt;h3 id=&quot;요즘-빠진-사진들&quot;&gt;요즘 빠진 사진들&lt;/h3&gt;

&lt;p&gt;최근에 알게되고 빠진 그림들이다.&lt;/p&gt;

&lt;p&gt;현대 미술가 Marc Allante는 단 한번도 미술을 배운 적이 없다고 한다.&lt;/p&gt;

&lt;p&gt;한번 그의 그림을 몇개만 살펴보자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Be_like_Water.JPG&quot; alt=&quot;Be_like_Water&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;first&quot;&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Prometheus.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Kronos.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-The_Old_Man_and_the_Sea.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-The_Crashing_Waves.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-The_Thinker.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Pallas.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Cepheus.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Atlas.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-A_Portrait_of_Hing_Kong.JPG&quot; style=&quot;width: auto; height: 500px;&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(document).ready(function(){
      $('.first').slick();
    });
  &lt;/script&gt;

&lt;hr /&gt;

&lt;div class=&quot;second&quot;&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Spring.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Dream_On.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Chai.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Lullaby.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(document).ready(function(){
      $('.second').slick();
    });
  &lt;/script&gt;

&lt;hr /&gt;

&lt;div class=&quot;third&quot;&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Sisyphus.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Veris.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Atalanta.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Aphrodite.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(document).ready(function(){
      $('.third').slick();
    });
  &lt;/script&gt;

&lt;hr /&gt;

&lt;div class=&quot;forth&quot;&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Achilles.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Clash.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Descent.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Faust.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Hyperion.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(document).ready(function(){
      $('.forth').slick();
    });
  &lt;/script&gt;

&lt;hr /&gt;

&lt;div class=&quot;fifth&quot;&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Orion.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Tsunami.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Out_of_a_Rising_Sun.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(document).ready(function(){
      $('.fifth').slick();
    });
  &lt;/script&gt;

&lt;hr /&gt;

&lt;div class=&quot;last&quot;&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-A_Pollock's_Point_Break.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Dreamers.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Eclipse.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Precipice.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Tempest.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-Two_Step.JPG&quot; style=&quot;width: auto; height: 700px;&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(document).ready(function(){
      $('.last').slick();
    });
  &lt;/script&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-13/Marc_Allante-That's_No_Moon.JPG&quot; alt=&quot;That's_No_Moon&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;돈있으면 꼭 사고싶은 그림이다. 그림을 보고 ‘갖고싶다’라는 생각이 처음 들었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이분의 블로그에서 다른 그림들 살펴보자.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.marcallante.com/portfolio&quot;&gt;https://www.marcallante.com/portfolio&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Jan 2021 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/etc/diary/2021-01-13-wednesday/</link>
        <guid isPermaLink="true">http://localhost:4000/etc/diary/2021-01-13-wednesday/</guid>
        
        
        <category>etc</category>
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>2021년 1월 10일</title>
        <description>&lt;h2 id=&quot;엄마-생신-가족-데이트&quot;&gt;엄마 생신 가족 데이트…&lt;/h2&gt;

&lt;h3 id=&quot;롯데-호텔-라세느&quot;&gt;롯데 호텔 라세느&lt;/h3&gt;

&lt;p&gt;엄마 생신겸, 내 대학원 합격겸 가족 모두를 위해 축하의 의미에서
1년전 생긴 롯데 호텔 라세느 뷔페 이용권을 사용하게 되었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/KakaoTalk_20210110_153928173_12.jpg&quot; alt=&quot;KakaoTalk_20210110_153928173_12&quot; width=&quot;400&quot; height=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;서울 뷔페 탑5에 드는 롯데 호텔 라세느 뷔페 이용
탑5 답게 가격도….어마어마하다…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;first&quot;&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/15.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/4.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/17.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/18.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/12.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/13.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/11.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/10.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/3.jpg&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(document).ready(function(){
      $('.first').slick();
    });
  &lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;맛있어 보이는 음식들, 독일식 족발 슈바이스학세&lt;br /&gt;
양고기 진짜 맛있었다.&lt;br /&gt;
달팽이도 맛있었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;second&quot;&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/1.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/5.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/6.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/7.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/8.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/9.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/2.jpg&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(document).ready(function(){
      $('.second').slick();
    });
  &lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;마지막 디저트 욤뇸뇸뇸&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;배 터지게 먹고 가족들과 석촌호수 산책을 하였다.&lt;/p&gt;

&lt;div class=&quot;last&quot;&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/25.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/26.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/19.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/20.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/21.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/22.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/23.jpg&quot; /&gt;&lt;/div&gt;
    &lt;div&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-10/24.jpg&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    $(document).ready(function(){
      $('.last').slick();
    });
  &lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;서울에서 평생살았지만 처음 가본 석촌호수&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;三人行必有我師焉 (삼인행 필유아사언)&lt;/em&gt;&lt;/strong&gt;
세 사람이 길을 같이 걸어가면 그 중에 반드시 내 스승이 있다.
논어(論語) 술이편(述而篇) -공자-&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 10 Jan 2021 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/etc/diary/2021-01-10-sunday/</link>
        <guid isPermaLink="true">http://localhost:4000/etc/diary/2021-01-10-sunday/</guid>
        
        
        <category>etc</category>
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>2021년 1월 9일</title>
        <description>&lt;h3 id=&quot;매일-일기-쓰는거는-좀-아닌거-같아서-매주-한번으로&quot;&gt;매일 일기 쓰는거는 좀 아닌거 같아서 매주 한번으로…&lt;/h3&gt;

&lt;h2 id=&quot;1&quot;&gt;1&lt;/h2&gt;
&lt;p&gt;먼저 한성대 학교 홈페이지 학교 기사에 수상 소식이 올라왔다.&lt;/p&gt;

&lt;p&gt;지난 2020년 과학기술정보통신부 주관 공개SW개발자 대회에서 동상을 수상하였었다. 전국 400개 팀중 22개 팀이 수상하였는데 그중 우리 팀이 수상하였다.
그것에 대해 학교 홈페이지에 기제가 되었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.hansung.ac.kr/web/www/cmty_01_04?p_p_id=EXT_BBS&amp;amp;p_p_lifecycle=0&amp;amp;p_p_state=normal&amp;amp;p_p_mode=view&amp;amp;_EXT_BBS_struts_action=%2Fext%2Fbbs%2Fview_message&amp;amp;_EXT_BBS_messageId=787145&quot;&gt;기사보기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2&quot;&gt;2&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-7.JPG&quot; alt=&quot;계약서&quot; /&gt;&lt;/p&gt;

&lt;p&gt;인프런에서 강의올린게 드디어 승인이되어서 공개되었다.
​
강의 만들고 그냥 올리면 바로 되는줄 알았었는데&lt;/p&gt;

&lt;p&gt;그게 아니였다. 약 6일 걸렸다. 생각해보면 정말 필수적인 절차인데.&lt;/p&gt;

&lt;p&gt;은근 시간 없이 짬내서 만든 강의라 더 시간 내기 싫었는데 이것저것 추가적으로 해야할것들이 있었다. 굉장히 귀찮았지만 어째든 성공!~~&lt;/p&gt;

&lt;p&gt;일일이 다 확인하시는지 몰랐는데 다 보시면서 확인하시는거 같았다 ㄷㄷ.
째든 그만큼 검사하는 기관에서 통과한거니깐 볼만한 강의이지 않을까?ㅎㅎㅎ&lt;/p&gt;

&lt;p&gt;한번 신청해주세요. ㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;강의는 하루만에 깃허브 블로그 만들기이다. 이름 그대로&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.inflearn.com/course/깃허브-블로그-포트폴리오?inst=4f66abe0&quot;&gt;강의보러가기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;&lt;br /&gt;&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;NO one does when they begin. Ideas don’t come out fully formed.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;처음부터 아는사람은 없다.아이디어는 처음부터 완전히 떠오르지 않는다.&lt;/em&gt;&lt;br /&gt;
-Mark Zuckerberg-, -허버드 졸업 연설중-&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 09 Jan 2021 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/etc/diary/2021-01-09-saturday/</link>
        <guid isPermaLink="true">http://localhost:4000/etc/diary/2021-01-09-saturday/</guid>
        
        
        <category>etc</category>
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>2021년 1월 3일</title>
        <description>&lt;h3 id=&quot;반복&quot;&gt;반복&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;아침에 일어나 동네 공원 한바퀴 뛰기 및 운동기구로 운동하기&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대학원 랩실에서 내준 미션(패턴인식 7단원 공부해오고 ppt 발표 준비 ㅠㅠ를 위해 여전히 공부중)
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;매일 네이버 어학당 요일별 공부하는중&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;​&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;There is no time for cut-and-dried monotony. There is time for work. And time for love. That leaves no other time.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;무미건조한 단조로움에 할애할 시간은 없다. 일할 시간과 사랑할 시간을 빼고 나면 다른 것을 할 시간은 없다!&lt;/em&gt;&lt;br /&gt;
-Coco Chanel-&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://www.thoughtco.com/coco-chanel-quotes-p2-3525384&quot;&gt;Reference&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Jan 2021 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/etc/diary/2021-01-03-sunday/</link>
        <guid isPermaLink="true">http://localhost:4000/etc/diary/2021-01-03-sunday/</guid>
        
        
        <category>etc</category>
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>2021년 1월 2일</title>
        <description>&lt;h3 id=&quot;1월-1일의-다짐을-실행하는-첫날&quot;&gt;1월 1일의 다짐을 실행하는 첫날&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;아침에 일어나 동네 공원 한바퀴 뛰기 및 운동기구로 운동하기&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대학원 랩실에서 내준 미션(패턴인식 -오일석 지음- 7단원 공부해오고 ppt 발표 준비 ㅠㅠ를 위해 공부중)
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;매일 네이버 어학당 요일별 공부하는중&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;​&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;My life didn’t please me, so I created my life.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;내 인생이 즐겁지 않았다 그래서 내가 내 인생을 만들었다.&lt;/em&gt;&lt;br /&gt;
-Coco Chanel-&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://www.thoughtco.com/coco-chanel-quotes-p2-3525384&quot;&gt;Reference&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Jan 2021 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/etc/diary/2021-01-02-saturday/</link>
        <guid isPermaLink="true">http://localhost:4000/etc/diary/2021-01-02-saturday/</guid>
        
        
        <category>etc</category>
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>2021년 1월 1일</title>
        <description>&lt;h3 id=&quot;새해-해돋이&quot;&gt;#새해, #해돋이&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/etc/diary/2021/1-1.jpg&quot; alt=&quot;1-1&quot; width=&quot;400&quot; height=&quot;600&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;1월 1일 뒷산에 올라가 첫 해돋이를 보았다. 08 am&lt;/p&gt;

  &lt;p&gt;새해가 밝았다.
대학원을 입학하게되었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;매일 6시 30분에 일어나기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아무리 할게 많아도 1시 이전에 잠들기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;매일 1시간 운동&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;영어 공부&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;일기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대학원에서 살아남기&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;열심히 공부하자!! 아자&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;다시 열정을 불태우자&lt;/p&gt;

&lt;p&gt;Fashion change, style remains.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;Fashion changes, but style endures.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;패션은 변하지만 스타일은 남는다.&lt;/em&gt;&lt;br /&gt;
-Coco Chanel-&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://www.thoughtco.com/coco-chanel-quotes-p2-3525384&quot;&gt;Reference&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jan 2021 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/etc/diary/2021-01-01-friday/</link>
        <guid isPermaLink="true">http://localhost:4000/etc/diary/2021-01-01-friday/</guid>
        
        
        <category>etc</category>
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>2020년 12월 31일</title>
        <description>&lt;h2 id=&quot;2020년-마지막-날&quot;&gt;2020년 마지막 날&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/etc/diary/yohan-cho-Mwvhyd22Lyw-unsplash.jpg&quot; alt=&quot;yohan-cho-Mwvhyd22Lyw-unsplash&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020년 참 많은 일이 있었다.
시간은 빠르고 배운것은 아직도 한참 부족하다.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 31 Dec 2020 12:45:51 +0900</pubDate>
        <link>http://localhost:4000/etc/diary/2020-12-31-lastday/</link>
        <guid isPermaLink="true">http://localhost:4000/etc/diary/2020-12-31-lastday/</guid>
        
        <category>last</category>
        
        
        <category>etc</category>
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 14.OpenGraph을 이용한 블로그 썸네일</title>
        <description>&lt;h1 id=&quot;opencgraph를-이용한-블로그-썸네일-지정&quot;&gt;OpencGraph를 이용한 블로그 썸네일 지정&lt;/h1&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;내가 운영하고 있는 블로그를 공유하는 일이 많아졌다. 동아리 후배들에게 인프런 강의 홍보도 하는겸 내 블로그 링크를 걸어서 보내주기 때문이다.&lt;/p&gt;

&lt;p&gt;공유를 하다보면 나는 분명 링크만 보냈을 뿐인데 링크에 대한 썸네일이나 제목, 설명들 등 해당 페이지에 들어가지 않아도 간단한 정보를 볼수있어서 이 링크가 대충 어떤 사이트인지 알 수 있다.&lt;/p&gt;

&lt;p&gt;이러한 것을 가능하게 하기 위해 사용하는 것이 &lt;a&gt;opengraph&lt;/a&gt;이다.&lt;/p&gt;

&lt;p&gt;이러한 &lt;a&gt;opengraph&lt;/a&gt;, og 이미지가 제대로 설정되어 있지 않다면 아래와 같이 나타난다. ㅠ&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/14/noog.JPG&quot; alt=&quot;그림&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 잘 설정하면 아래처럼 옳게 썸네일이 나온다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/14/1.JPG&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해당 링크를 들어가서 어떤 정보들이 &lt;kbd&gt;title&lt;/kbd&gt;인지, &lt;kbd&gt;description&lt;/kbd&gt;인지, &lt;kbd&gt;image&lt;/kbd&gt;인지 등을 가져오기엔 어떤 정보가 정확한지 판단하기란 쉽지 않다. 그래서 이러한 정보를 &lt;kbd&gt; &amp;lt; head &amp;gt; &lt;/kbd&gt; tag 안에 &lt;kbd&gt;meta&lt;/kbd&gt;로 넣어두는데 링크를 공유하면 이 header에 &lt;kbd&gt;meta&lt;/kbd&gt;를 통해서 필요한 정보를 가져온다.&lt;/p&gt;

&lt;h2 id=&quot;open-graph-protocol&quot;&gt;Open Graph Protocol&lt;/h2&gt;

&lt;p&gt;자세한 내용은 &lt;a href=&quot;https://ogp.me/&quot;&gt;Open Graph&lt;/a&gt;에서 확인할 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;tag-description&quot;&gt;Tag Description&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;kbd&gt;og:url&lt;/kbd&gt; 페이지의 표준 URL (데스크탑 URL)&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;og:title&lt;/kbd&gt; 콘텐츠 제목&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;og:description&lt;/kbd&gt; 콘텐츠 설명. 미리보기에서 제목 아래에 표시&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;og:site_name&lt;/kbd&gt; 웹 사이트의 이름 (주소 아님)&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;og:image&lt;/kbd&gt; 콘텐츠를 공유 시 표시되는 이미지의 URL&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;fb:app_id&lt;/kbd&gt; 페이스북 인사이트를 사용하기 위한 앱 아이디&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;fb:admins&lt;/kbd&gt; 웹 사이트용 도메인 인사이트를 사용하기 위한 아이디&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;여기서 내가 필요한건 링크를 보냈을 때 나오는 이미지와 Title, 그리고 설명글이다. 각각에 필요한 정보를 다음과 같이 header에 올려주면 적용된다.&lt;/p&gt;

&lt;h3 id=&quot;jekyll에-적용하기&quot;&gt;Jekyll에 적용하기&lt;/h3&gt;

&lt;p&gt;다행이 나는 현재 hydejack 테마는 다 적용이 되어 있기 때문에 일일이 코드를 넣을 필요는 없다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/14/og.JPG&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;_config.yml 파일에 og_image에 자신의 기본 썸네일 이미지를 정해준다.&lt;/p&gt;

&lt;p&gt;나는 처음에 png파일이 아니여서 적용이 되지않았었다. 자신의 썸네일에 맞게 이름과 파일 형식(jpg,JPG,png,PNG…)를 맞춰주자.&lt;/p&gt;

&lt;p&gt;실제 설정 코드는 _include 폴더에 head.html에 있다. 마찬가지로 썸네일로 할 이미지를 잘 골라 적어주면 끝이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/14/og_2.JPG&quot; alt=&quot;그림3&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 27 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-27-making-blog-14/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-27-making-blog-14/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 13.이미지 슬라이드</title>
        <description>&lt;h1 id=&quot;이미지-슬라이드-기능&quot;&gt;이미지 슬라이드 기능&lt;/h1&gt;

&lt;p&gt;최근 정말 오랜만에 바깥세상을 보고 사진을 많이 찍었다.&lt;/p&gt;

&lt;p&gt;찍은 많은 사진들을 블로그에 올리고 싶은데 다 올리면 한 페이지가 너무 길어지고
스크롤 많이 내려야하는게 이쁘지도 않고 마음에도 안들었다.&lt;/p&gt;

&lt;p&gt;그러다 문득 인스타그램같은 경우는 이미지 10장까지 올리고 옆으로 넘겨서 보는것을 보고 이렇게 만들어보자라는 생각에 찾아 보았다.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#이미지-슬라이드-기능&quot; id=&quot;markdown-toc-이미지-슬라이드-기능&quot;&gt;이미지 슬라이드 기능&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1_-html과-css로-이미지-슬라이드-구성하기&quot; id=&quot;markdown-toc-1_-html과-css로-이미지-슬라이드-구성하기&quot;&gt;1_ html과 css로 이미지 슬라이드 구성하기&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2_-slick-이용하기&quot; id=&quot;markdown-toc-2_-slick-이용하기&quot;&gt;2_ slick 이용하기&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#문제점&quot; id=&quot;markdown-toc-문제점&quot;&gt;문제점&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3_-bxslider-이용하기&quot; id=&quot;markdown-toc-3_-bxslider-이용하기&quot;&gt;3_ bxslider 이용하기&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1_-html과-css로-이미지-슬라이드-구성하기&quot;&gt;1_ html과 css로 이미지 슬라이드 구성하기&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;아래 링크는 유튜브 영상 링크이다. 이분이 아주 잘 설명해주신다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=JryRu5zby3A&amp;amp;lc=Ugx52qlgeqYik9FkZTZ4AaABAg.9IKu_87S46F9IMRV2UiPtp&quot;&gt;html과css만으로 슬라이드 구성하기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;하지만 문제는 나는 한 게시물에 컨셉에 맞게 이미지를 모아서 슬라이드를 구성하고 싶다.&lt;/p&gt;

&lt;p&gt;예를 들어 점심에 먹은 맛집 음식 10개를 슬라이드로 구성하고 점심먹고 야외 데이트 사진을 또 슬라이드로 구성하고 싶지, 이것 다를 하나의 슬라이드로 만들고 싶지않다.&lt;/p&gt;

&lt;p&gt;하지만 위 방법은 이미지 하나하나 추가하는데도 하나하나 id를 지정해주어야 하는등 어마어마하게 귀찮다. 나는 이미지를 추가할때마다 자동화되어 슬라이드가 만들어지면 좋겠다라는 생각으로
이미지 슬라이드 함수, jquery 등등 검색하다가 아래 방법을 알게 되었다.&lt;/p&gt;

&lt;h2 id=&quot;2_-slick-이용하기&quot;&gt;2_ slick 이용하기&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://kenwheeler.github.io/slick/&quot;&gt;slick홈페이지&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;slick을 바로 사용하고 싶으면 위 홈페이지에 들어가서 [카테고리:get it now]를 클릭한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/SenM6KG.jpg&quot; alt=&quot;13-1&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 CSS와 JS를 복사한다.&lt;/p&gt;

&lt;p&gt;나중에 옵션을 변경하여 나만의 이미지 슬라이드를 만들려면 &lt;code&gt;Download now&lt;/code&gt; 를 다운로드 해야한다. 우선 아래와 같이 해본다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ko&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;single-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/img/image01.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/img/image02.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/img/image03.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;			
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.single-item&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가장 기본적인 slick을 만들었다.&lt;/p&gt;

&lt;p&gt;위의 코드를 통해 &lt;code&gt;head&lt;/code&gt;에 들어갈 코드를 &lt;code&gt;_includes/head.html&lt;/code&gt; 에
검색(tipuesearch)넣듯이 넣으면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/13-2.png&quot; alt=&quot;그림&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 그림은 기본 link를 불러온것은 주석처리했고 다운받은것을 불러온다. 다운받은 폴더를
assets/css폴더에 slick폴더를 넣었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/1.JPG&quot; alt=&quot;1&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;다운받은 폴더안에 slick만 복사해서 assets/css에 넣는다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;_includes/head.html에 아래 코드를 넣는다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--slick--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/css/slick/slick.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/css/slick/slick-theme.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/css/slick/slick.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/8.JPG&quot; alt=&quot;8&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;tipuesearch 아래 넣는다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이렇게 하면 모든 md 게시물에 head가 적용된다.&lt;/p&gt;

&lt;p&gt;다음 &lt;code&gt;assets/css/slick&lt;/code&gt; 폴더에 slick.css와 slick-theme.css를 바꿔준다.&lt;/p&gt;

&lt;p&gt;크게 바꿀것은 없고 slick-theme.css에 Allows는 뒤로, 앞으로 버튼이다.&lt;/p&gt;

&lt;p&gt;기본 버튼이미지가 마음에 안들기 때문에 직접 이미지를 넣고 위치를 정해준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/4.JPG&quot; alt=&quot;4&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;top: 50% 는 화살표의 위치가 y축의 가운데 위치한다는 뜻이다. 더 아래에 두고 싶으면 값을 더 키우면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/5.JPG&quot; alt=&quot;5&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;content: 에 기존 코드를 지우고 url(이미지위치)를 넣는다.&lt;/p&gt;

&lt;p&gt;slick.css에서 아래 그림처럼 margin을 10px 늘려주었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/6.JPG&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;적용은 끝났다. 이제 게시물에 적용해보자.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main_center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_01.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_02.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_03.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_04.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_05.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_06.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.main_center&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;autoplay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*자동으로 슬라이딩됨*/&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;dots&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* 하단 점 버튼 */&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* 이미지가 슬라이딩시 걸리는 시간 */&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;infinite&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;autoplaySpeed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* 이미지가 다른 이미지로 넘어 갈때의 텀 */&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;arrows&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;slidesToShow&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;slidesToScroll&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;touchMove&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* 마우스 클릭으로 끌어서 슬라이딩 가능여부 */&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;nextArrows&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* 넥스트버튼 */&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;prevArrows&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;arrow&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*false면 좌우 버튼 없음, true면 좌우 버튼 보임*/&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;fade&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/7.JPG&quot; alt=&quot;7&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;문제점&quot;&gt;문제점&lt;/h3&gt;

&lt;p&gt;내가 가장 원하는 옵션 하나하나 찾아가면서 수시간 걸려서 했는데 레파지토리에 올려서 블로그를 확인해보니 적용이 안된다… 로컬에서는 되는데… 안된다… 어째든 안된다…ㅠㅠㅠ&lt;/p&gt;

&lt;p&gt;다시 알아보고 하는데 수시간… 다른 방법을 찾아보았다(다행이 다른 방법이 있었지만 다른방법도 안되면 어떻게하지 하면서 마음 졸였었다.)&lt;/p&gt;

&lt;h2 id=&quot;3_-bxslider-이용하기&quot;&gt;3_ bxslider 이용하기&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://bxslider.com/&quot;&gt;bxSlider사이트&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;slick으로 해놓은게 아까워서 해결방법을 찾고 head를 md에 따로 넣어보고 별의별 짓을 다했지만(오후4시에 시작해서 짜증나서 그날 밤 새벽5시까지) 결국 해결하지 못하였다.&lt;/p&gt;

&lt;p&gt;그리고 찾은 것이 bxslider였다.&lt;/p&gt;

&lt;p&gt;옵션 그런거 더이상 하고 싶지가 않아서 바로 적용하는것을 테스트해보았다.&lt;/p&gt;

&lt;p&gt;위 링크를 걸어둔 홈페이지에 install 카테고리를 클릭한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/10.JPG&quot; alt=&quot;10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 그림 그래도 해주면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/9.JPG&quot; alt=&quot;9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;먼저 head.html에 기존 slick을 지운고 아래 코드(1)를 위 그림처럼 넣어준다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 게시물에 바로 적용하기&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;last&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_01.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_02.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_03.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_04.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_05.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src= &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/img/diary/2021/1-10/KakaoTalk_20210111_023954195_06.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width: auto; height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.last&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bxSlider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/13/11.JPG&quot; alt=&quot;11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;서…성공 ㅠㅠ 이렇게 쉬운것을…왜 그 고생을 했는지..&lt;/p&gt;
</description>
        <pubDate>Sun, 27 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-27-making-blog-13/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-27-making-blog-13/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 12.Home화면 설정</title>
        <description>&lt;h1 id=&quot;블로그-첫화면-설정&quot;&gt;블로그 첫화면 설정&lt;/h1&gt;

&lt;p&gt;블로그 첫화면이 블로그 글들의 목차들, 리스트로 나열되어있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/12-2.JPG&quot; alt=&quot;그림1&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;나는 내 블로그에 처음 들어오면 내가 누구인지를 보여주고 싶다.(첫화면부터 about창이 뜨게 하고 싶다.)&lt;/p&gt;

&lt;p&gt;또는 나의 뮤즈가 된 그림이나 사진을 넣고 싶다. 처음부터 지저분한 게시물 리스트가 아니라.&lt;/p&gt;

&lt;p&gt;한번 파헤쳐보자.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#블로그-첫화면-설정&quot; id=&quot;markdown-toc-블로그-첫화면-설정&quot;&gt;블로그 첫화면 설정&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1_-현재-home-화면부터-찾기&quot; id=&quot;markdown-toc-1_-현재-home-화면부터-찾기&quot;&gt;1_ 현재 Home 화면부터 찾기&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1_-현재-home-화면부터-찾기&quot;&gt;1_ 현재 Home 화면부터 찾기&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;root의 index.html에서 Home화면을 정하고 있다.&lt;/p&gt;

&lt;p&gt;현재 index.html은&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: blog
title: Home
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;로 되어있다.&lt;/p&gt;

&lt;p&gt;첫 홈 화면을 About으로 일단 하겠다. 나중에 나에게 영감이 되거나 뮤즈가 된 사진이나 그림을 내 첫화면에 하고 &lt;a href=&quot;https://ratsgo.github.io/&quot;&gt;이분 처럼&lt;/a&gt;
일단은 About으로 하자 또한 index.html 대신 index.md로 바꾸었다.
아래와 같이 바꿔주었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/12-4.JPG&quot; alt=&quot;그림2&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러면 내 url로 브라우저에 검색해서 접속하면 현재 내 블로그처럼 첫화면이 나를 소개하는 페이지가 된다.&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-26-making-blog-12/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-26-making-blog-12/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 11.블로그-이전글,다음글버튼</title>
        <description>&lt;h1 id=&quot;이전글-다음글-버튼-만들기&quot;&gt;이전글, 다음글 버튼 만들기&lt;/h1&gt;

&lt;p&gt;연속된 게시물인 경우, 시리즈물인 경우 게시물을 다 본 뒤 다음 게시물을 바로 보고 싶다.&lt;/p&gt;

&lt;p&gt;하지만 게시물을 다 본 뒤 다음 게시물을 보기위해서 뒤로 가기 버튼을 눌러 게시물 리스트 페이지로 간뒤에&lt;/p&gt;

&lt;p&gt;다음 게시물을 찾아 클릭해야하는 2번의 행동을 해야한다.&lt;/p&gt;

&lt;p&gt;게시물을 다보면 다음 게시물을 볼수 있는 버튼이 있으면 좋겠다는 생각이 들어 이전글 다음글 보기 버튼 만들기 포스팅을 준비해보았다.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#이전글-다음글-버튼-만들기&quot; id=&quot;markdown-toc-이전글-다음글-버튼-만들기&quot;&gt;이전글, 다음글 버튼 만들기&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1_-버튼-구성&quot; id=&quot;markdown-toc-1_-버튼-구성&quot;&gt;1_ 버튼 구성&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2_-버튼-디자인&quot; id=&quot;markdown-toc-2_-버튼-디자인&quot;&gt;2_ 버튼 디자인&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3_-버튼-위치시키기&quot; id=&quot;markdown-toc-3_-버튼-위치시키기&quot;&gt;3_ 버튼 위치시키기&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#about-밑에-위치-시키기&quot; id=&quot;markdown-toc-about-밑에-위치-시키기&quot;&gt;&lt;strong&gt;about 밑에 위치 시키기&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#related-안에-위치시키기&quot; id=&quot;markdown-toc-related-안에-위치시키기&quot;&gt;&lt;strong&gt;Related 안에 위치시키기&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#게시물-가장-아래-about-위에-위치시키기&quot; id=&quot;markdown-toc-게시물-가장-아래-about-위에-위치시키기&quot;&gt;&lt;strong&gt;게시물 가장 아래 about 위에 위치시키기&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1_-버튼-구성&quot;&gt;1_ 버튼 구성&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;먼저 &lt;code&gt;_include&lt;/code&gt; 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page-button.html&lt;/code&gt; 파일을 만든다.&lt;/p&gt;

&lt;p&gt;이후 아래 코드를 넣어준다.&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://github.com/khw11044/githubpagesamplecode/issues/3&quot;&gt;https://github.com/khw11044/githubpagesamplecode/issues/3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if page.previous.url&lt;/code&gt;를 통해 이전 게시물의 주소를 불러올수 있다.
이때 버튼내의 글자는 이전 게시물의 제목으로 할수 있다.&lt;/p&gt;

&lt;p&gt;마찬가지로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; if page.next.url &lt;/code&gt;로 다음 게시물을 불러올수 있다.&lt;/p&gt;

&lt;p&gt;게시물 제목으로 하는 경우 아래와 같다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/11-1.JPG&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;부제목인 경우 [GithubPages] 10.-검색엔진최적화 –&amp;gt; 10.검색엔진최적화로 바꿀수도 있다.&lt;/p&gt;

&lt;p&gt;필자는 ‘이전글’ ‘다음글’로 정하였다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;page-control&quot;&amp;gt;
	&amp;lt;div&amp;gt;
		
		&amp;lt;a id=&quot;prev&quot; class=&quot;button&quot; href=&quot;/blog/githubpages/2020-12-26-making-blog-10/&quot;&amp;gt;&amp;amp;laquo; 이전글&amp;lt;/a&amp;gt;
		
	&amp;lt;/div&amp;gt;

	&amp;lt;div&amp;gt;
		
		&amp;lt;a id=&quot;next&quot; class=&quot;button&quot; href=&quot;/blog/githubpages/2020-12-26-making-blog-12/&quot;&amp;gt;다음글 &amp;amp;raquo;&amp;lt;/a&amp;gt;
		
	&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/11-2.JPG&quot; alt=&quot;그림2&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2_-버튼-디자인&quot;&gt;2_ 버튼 디자인&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;자 그럼 이제 버튼 디자인을 위 사진처럼 만들어 보자.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets/css/hydejack.css&lt;/code&gt;파일을 연다.&lt;/p&gt;

&lt;p&gt;page-button.html에서 div class 가 page-control이다.
이름을 맞춰서 &lt;code&gt;hydejack.css&lt;/code&gt; 파일 가장 아래에 아래 코드를 추가해준다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.page-control&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.page-control&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;inset&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ffffff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ffffff&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f6f6f6&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#ffffff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#dcdcdc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#666666&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;text-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ffffff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f6f6f6&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ffffff&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#f6f6f6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:active&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;자신의 취향대로 버튼을 커스텀해보자.&lt;/p&gt;

&lt;h2 id=&quot;3_-버튼-위치시키기&quot;&gt;3_ 버튼 위치시키기&lt;/h2&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;about-밑에-위치-시키기&quot;&gt;&lt;strong&gt;about 밑에 위치 시키기&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/11-3.JPG&quot; alt=&quot;그림3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;_layouts/post.html&lt;/code&gt;에 &lt;code&gt;% include about.html %&lt;/code&gt; 밑에 &lt;code&gt;% include page-button.html %&lt;/code&gt;를 넣어준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/11-4.JPG&quot; alt=&quot;그림4&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;related-안에-위치시키기&quot;&gt;&lt;strong&gt;Related 안에 위치시키기&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;기존에 &lt;code&gt;_layouts/post.html&lt;/code&gt;를 원래되로 돌려놓는다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;_includes/related.html&lt;/code&gt;에 아래와 같이 &lt;code&gt;% include page-button.html %&lt;/code&gt;를 붙혀넣는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/11-5.JPG&quot; alt=&quot;그림5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결과&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/11-6.JPG&quot; alt=&quot;그림6&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;게시물-가장-아래-about-위에-위치시키기&quot;&gt;&lt;strong&gt;게시물 가장 아래 about 위에 위치시키기&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;_includes/related.html&lt;/code&gt;를 다시 원래대로 돌려놓는다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;_layouts/post.html&lt;/code&gt;에 &lt;code&gt;% include about.html %&lt;/code&gt; 위에 &lt;code&gt;% include page-button.html %&lt;/code&gt;를 넣어준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/11-2.JPG&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;현재 필자의 블로그 상태이다.
이게 제일 맘에 든다.&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-26-making-blog-11/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-26-making-blog-11/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 10.-검색엔진최적화</title>
        <description>&lt;h1 id=&quot;검색엔진최적화search-engine-optimization&quot;&gt;검색엔진최적화(Search Engine Optimization)&lt;/h1&gt;

&lt;p&gt;검색엔진이 이해하기 쉽도록 홈페이지 구조를 설정하여 포털 사이트 상위에 노출시키는 작업이다. jekyll으로 제작된 깃허브 블로그에 SEO 작업을 진행한다.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#검색엔진최적화search-engine-optimization&quot; id=&quot;markdown-toc-검색엔진최적화search-engine-optimization&quot;&gt;검색엔진최적화(Search Engine Optimization)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1_-sitemap&quot; id=&quot;markdown-toc-1_-sitemap&quot;&gt;1_ Sitemap&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#11-sitemapxml-생성하기&quot; id=&quot;markdown-toc-11-sitemapxml-생성하기&quot;&gt;1.1 Sitemap.xml 생성하기&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2_-rss&quot; id=&quot;markdown-toc-2_-rss&quot;&gt;2_ RSS&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#21-rss-feedxml-생성하기&quot; id=&quot;markdown-toc-21-rss-feedxml-생성하기&quot;&gt;2.1 RSS feed.xml 생성하기&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3_-robotsxml&quot; id=&quot;markdown-toc-3_-robotsxml&quot;&gt;3_ robots.xml&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#31-robotsxml-생성&quot; id=&quot;markdown-toc-31-robotsxml-생성&quot;&gt;3.1 robots.xml 생성&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4_-블로그-등록&quot; id=&quot;markdown-toc-4_-블로그-등록&quot;&gt;4_ 블로그 등록&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#41-google-search-console&quot; id=&quot;markdown-toc-41-google-search-console&quot;&gt;4.1 Google Search Console&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#42-naver-webmaster&quot; id=&quot;markdown-toc-42-naver-webmaster&quot;&gt;4.2 Naver Webmaster&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1_-sitemap&quot;&gt;1_ Sitemap&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;웹 크롤링 로봇이 이용할 수 있는 웹사이트의 접근 가능한 페이지의 목록&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사이트맵을 등록하면 구글에서 주기적으로 크롤링을 한 뒤 관련 검색어로 검색 시 해당 사이트가 노출이 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sitemap.xml 파일을 사용하면 사이트 구조를 구글, 네이버, 다음 등 검색엔진에 손 쉽게 제출할 수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;검색엔진에 크롤링해야하는 URL을 알려줌으로써 색인을 생성하는 방법과 색인을 생성하는 방법을 제어한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;11-sitemapxml-생성하기&quot;&gt;1.1 Sitemap.xml 생성하기&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;아래 내용으로 sitemap.xml 파일을 만들고 root 경로에 넣어준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-1.png&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://github.com/khw11044/khw11044.github.io/blob/master/sitemap.xml&quot;&gt;sitemap코드&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;해당 파일을 커밋, 푸쉬 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;블로그 주소/sitemap.xml 에 들어가서 제대로 사이트맵이 등록되었는지 확인해 본다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;홈페이지의 모든글의 정보를 담고있는 사이트맵이 출력되는 것을 알 수 있다. 추후에 블로그 포스팅을 푸쉬 하면 jekyll이 빌드하면서 사이트맵도 자동으로 갱신된다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Gemfile파일에 gem ‘jekyll-sitemap’이 있는것을 확인해보고 있다면 자동으로 갱신&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;참고로 /sitemap.xml을 실행했을 때 제대로 안나오는 경우가 있는데, 주소 링크에 특수문자가 들어간 경우이다. 깃허브 블로그의 경우 포스팅 파일명으로 링크가 생성되므로 포스팅 파일명은 특수문자 및 한글 사용을 안하도록 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2_-rss&quot;&gt;2_ RSS&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;RSS(Rich Site Summary)란 뉴스나 블로그 사이트에서 주로 사용하는 콘텐츠 표현 방식이며, 웹 사이트 관리자는 RSS 형식으로 웹 사이트 내용을 보여 준다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;RSS피드는 정기적으로 업데이트 되는 웹 콘텐츠를 전달해 주는 형태이며, 글의 전체 혹은 요약된 정보와 작성자 등의 정보가 포함되어 있다. 즉 블로그의 글을 작성하면 RSS피드에도 전달이 되고, 구글, 네이버, 다음 등을 통해 글을 검색하면, 검색 엔진은 블로그의 RSS피드로부터 글을 받게 되어 해당 블로그로 들어오게 된다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;21-rss-feedxml-생성하기&quot;&gt;2.1 RSS feed.xml 생성하기&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;사이트맵과 동일하게 아래 코드를 넣어준 뒤 feed.xml 파일을 만들고 root 경로에 넣어준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-2.png&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://github.com/khw11044/khw11044.github.io/blob/master/feed.xml&quot;&gt;feed.xml코드&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;해당 파일을 커밋, 푸쉬 하고 블로그 주소/feed.xml 에 제대로 등록되었는지 확인해 본다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3_-robotsxml&quot;&gt;3_ robots.xml&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;robots.txt는 로봇 배제 표준을 따르는 일반 텍스트 파일이다. 쉽게 표현하면 검색 엔진이 해당 사이트의 콘텐츠를 가져가도 허락하는 부분과 가져가면 안된다 라는 설정을 하는 부분이라고 보면 된다. 위와 동일하게 root 경로에 위치한다.&lt;/p&gt;

&lt;h3 id=&quot;31-robotsxml-생성&quot;&gt;3.1 robots.xml 생성&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;robots.xml 파일을 만들고 아래와 같이 입력한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User-agent: *
Allow: /

Sitemap: http://khw11044.github.io/sitemap.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;User-agent는 허용할 검색엔진 명을 넣게 된다. 따로 설정하지 않으면(*) 모든 검색엔진을 허용하게 된다. Sitemap은 본인 블로그 사이트맵 주소를 넣어 주면 된다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;모든 웹사이트 콘텐츠에 대한 모든 웹 클롤러의 접근을 차단
User-agent: *
Disallow: /

만약 구글 로봇만 차단시키고 싶다면 User-agent에 * 부분을 Googlebot으로 변경하여 설정
User-agent: Yeti
Disallow: /hello/

이렇게 설정하면 웹사이트의 모든 콘텐츠의 네이버 검색로봇(Yeti)의 크롤링을 허용하되, /hello/ 디렉토리 안의 페이지에 대한 접근만 차단한다는 의미
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;4_-블로그-등록&quot;&gt;4_ 블로그 등록&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;본인 블로그를 등록 해야 구글 및 네이버에서 검색이 가능하다.&lt;/p&gt;

&lt;h3 id=&quot;41-google-search-console&quot;&gt;4.1 Google Search Console&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/search#?modal_active=none&quot;&gt;Google Search Console&lt;/a&gt;에 접속한다. SEARCH CONSOLE 버튼을 클릭한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-3.png&quot; alt=&quot;그림3&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;시작하기 버튼을 누른다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-4.png&quot; alt=&quot;그림4&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;URL 접두어에 자신의 깃헙블로그 주소를 넣는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-5.png&quot; alt=&quot;그림5&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;소유권 확인과정을 거친다.&lt;/p&gt;

&lt;p&gt;html 파일을 다운받아 깃허브블로그 코드 폴더 root에 넣는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-6.png&quot; alt=&quot;그림6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;git repository에 push한다. 이후 바로 소유권이 확인되지 않는다. 대략 5분?이상 기다려야한다.&lt;/p&gt;

&lt;p&gt;하지만 그래도 안된다면 HTML 태그방법으로 메타 코드를 복사한다.
메타 태그를 이용한 사이트 소유권을 확인한 뒤 사이트맵을 등록해주면 된다.&lt;/p&gt;

&lt;p&gt;아래 그림처럼 &lt;code&gt;_includes/head.html&lt;/code&gt;에 추가해준다.&lt;/p&gt;

&lt;p&gt;![그림7]/assets/img/study/githubpages/10-7.JPG)&lt;/p&gt;

&lt;p&gt;기다리면 다음과 같이 소유권이 확인된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-8.png&quot; alt=&quot;그림8&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;완료버튼을 누르면 Google search Console로 들어간다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-9.png&quot; alt=&quot;그림9&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-10.png&quot; alt=&quot;그림10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;sitemap.xml을 입력하고 제출 버튼을 누른다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/10-11.png&quot; alt=&quot;그림11&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;42-naver-webmaster&quot;&gt;4.2 Naver Webmaster&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://searchadvisor.naver.com/console/board&quot;&gt;네이버 웹마스터 도구&lt;/a&gt;에 접속한다.&lt;/p&gt;

&lt;p&gt;로그인하고 블로그 주소를 등록해 사이트를 추가해 준다.&lt;/p&gt;

&lt;p&gt;웹마스터 도구에서 제공하는 html 파일을 다운받아 본인 블로그에 업로드하거나 메타태그를 이용하는 방법으로 사이트 소유권을 확인한다.&lt;/p&gt;

&lt;p&gt;왼쪽 요청 메뉴로 들어가 사이트맵을 제출해준다.&lt;/p&gt;

&lt;p&gt;깃허브에서 공식적으로 지원하는 jekyll블로그는 RSS2.0이 아닌, ATOM이라는 방식으로 feed.xml을 생산해준다. 그리고 ATOM방식으로 제작된 피드는 네이버 웹마스터도구에 등록이 안된다.&lt;/p&gt;

&lt;p&gt;솔직히 네이버는 들어가보면 알겠지만 설명이 워낙 잘되어있어서 영상을 보면서 따라하면 되겠다.&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;https://velog.io/@recordboy/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8Jekyll-SEO-%EC%84%B8%ED%8C%85-o88m61r8&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-26-making-blog-10/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-26-making-blog-10/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 09.-구글애드센스</title>
        <description>&lt;h1 id=&quot;구글-애드센스google-adsense-적용하기&quot;&gt;구글 애드센스(Google Adsense) 적용하기&lt;/h1&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#구글-애드센스google-adsense-적용하기&quot; id=&quot;markdown-toc-구글-애드센스google-adsense-적용하기&quot;&gt;구글 애드센스(Google Adsense) 적용하기&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1_-구글-애드센스google-adsense란&quot; id=&quot;markdown-toc-1_-구글-애드센스google-adsense란&quot;&gt;1_ 구글 애드센스(Google Adsense)란?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2_-애드센스-가입&quot; id=&quot;markdown-toc-2_-애드센스-가입&quot;&gt;2_ 애드센스 가입&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3_-애드센스-소스코드-적용&quot; id=&quot;markdown-toc-3_-애드센스-소스코드-적용&quot;&gt;3_ 애드센스 소스코드 적용&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4_-승인-후-절차&quot; id=&quot;markdown-toc-4_-승인-후-절차&quot;&gt;4_ 승인 후 절차&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1_-구글-애드센스google-adsense란&quot;&gt;1_ 구글 애드센스(Google Adsense)란?&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;구글 애드센스(Google Adsense)란 구글의 수익형 광고 플랫폼으로 웹사이트 및 블로그등을 운영하는 사람이라면 누구나 애드센스에 가입하여 광고 수익을 구글과 나눌 수 있다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;반대로 애드워즈의 경우 광고주를 위한 플랫폼으로 광고 게재를 의뢰하고 구글측에 광고비를 지급한다.&lt;/p&gt;

&lt;p&gt;비슷한 플랫폼으로는 Naver의 애드포스트, MS의 애드센터, Yahoo의 퍼블리셔 네트워크 등이 있다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;구글 애드센스는 신청 후 승인이 되어야 운영이 가능하므로, 가급적이면 블로그 개설 직후 바로 신청하지 말고 몇개월 정도 포스팅을 꾸준히 등록하고 구글 애널리틱스 등을 통해 유입 정도를 파악한 후 신청하는 것이 좋다.&lt;/p&gt;

&lt;p&gt;한가지 유념할 것은 승인 후 본인 블로그의 광고를 본인이 클릭하게 되면 이용정지를 당할 수 있기 때문에 주의해야 한다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;본 포스팅에서는 애드센스와의 기술적인 연동만을 다루므로 수익성, 장단점, 유의사항 등은 다루지 않는다. 필요시, 아래 링크를 참고하면 되겠다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://namu.wiki/w/%EC%95%A0%EB%93%9C%EC%84%BC%EC%8A%A4&quot;&gt;애드센스 - 나무위키&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://invitetour.tistory.com/38&quot;&gt;구글 애드센스 승인과정과 광고넣기 - 휴식같은 여행으로의 초대&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://invitetour.tistory.com/128&quot;&gt; “구글 애드센스 정지 후 30일만에 해제됐네요.” - 휴식같은 여행으로의 초대&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jjisso.tistory.com/317&quot;&gt;구글 애드센스로 돈벌기 쉽지 않은 이유 - 찌소 주식차트분석&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2_-애드센스-가입&quot;&gt;2_ 애드센스 가입&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;아래 그림과 같이  &lt;a href=&quot;https://www.google.co.kr/adsense/start/&quot;&gt;Goodle Adesense&lt;/a&gt;  에 접속하여 시작하기를 클릭한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-1.jpeg&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;광고를 게재할 웹사이트 주소, 이메일 주소 등의 정보를 입력한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-2.jpeg&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;국가를 선택한후, 이용약관에 동의한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-3.jpeg&quot; alt=&quot;그림3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;수익금을 받기 위한 절차로 결제 프로필을 등록해야한다. 주소 및 연락처 등의 개인정보를 입력한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-4.jpeg&quot; alt=&quot;그림4&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3_-애드센스-소스코드-적용&quot;&gt;3_ 애드센스 소스코드 적용&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;가입 마무리 단계에, 아래 그림과 같이 구글 애드센스 소스 코드를 웹사이트에 적용하라는 안내 메시지가 나온다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-5.jpeg&quot; alt=&quot;그림5&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;여기서 data-ad-client 부분에 명시된 ca-pub로 시작되는 값이 본인의 애드센스 id가 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;소스 코드를 웹사이트에 적용하는 방법은 웹사이트 및 블로그 운영방식에 따라 천차만별이다. 일반적으로 위 그림에 안내된 바와 같이 메인 페이지의 &amp;lt;head&amp;gt;태그 사이에 코드를 붙여넣으면 되는데, 워드프레스 사용자의 경우 별도 안내방법이 소개되어 있다. 다만 네이버, 티스토리 등 개인이 소스코드를 직접 관리하지 않는 경우 해당 블로그 메뉴얼을 찾아보거나 구글링을 통해 적용방법을 별도로 찾아야한다. 본 포스팅에서는 Jekyll 기반의 블로그에 적용하는 방법만을 다루며 필자의 블로그를 예시로 적용해 보겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;먼저 본 블로그의 겨우 아래 그림과 같이 _includes 폴더 아래에 post.html, right-side.html, contents.html 총 3개의 파일에 구글 애드센스를 연동할 수 있는 페이지가 이미 구성되어있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-6.jpeg&quot; alt=&quot;그림6&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;해당 파일 3개를 열어 data-ad-client 속성값을 아래 그림과 같이 위에서 본인이 부여받은 애드센스 id로 입력해준다. 각 파일별로 수정해야 할 부분이 2군데 존재한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-7.jpeg&quot; alt=&quot;그림7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-8.jpeg&quot; alt=&quot;그림8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-9.jpeg&quot; alt=&quot;그림9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 위의 화면으로 돌아가 코드를 사이트에 붙여넣었습니다. 부분에 체크한 후, 완료 버튼을 누르면 아래와 같은 메시지를 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/9-10.jpeg&quot; alt=&quot;그림10&quot; /&gt;
&lt;img src=&quot;/assets/img/Blog/githubpages/9-11.jpeg&quot; alt=&quot;그림11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;승인이 완료될 때까지 기다린다. 일반적으로 승인에는 1일~14일 정도 소요되며 승인이 될 경우 위에서 신청했던 이메일로 축하 메일이 도착한다&lt;/p&gt;

&lt;h2 id=&quot;4_-승인-후-절차&quot;&gt;4_ 승인 후 절차&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;승인이 완료되면 Congrats! 메일이 도착한다. Get started 버튼을 클릭한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;광고 선택 등 원하는 옵션을 설정하면 블로그에 광고가 게재되는 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;블로그에 광고가 나오지 않거나 광고의 위치 및 종료 등을 바꾸고 싶은 경우 위 애드센스 소스코드 적용 항목의 3개 파일들을 본인이 원하는 형태로 조정해주면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;그 외 광고 코드를 수정하고 싶거나 디스플레이 광고 단위를 변경하는 등의 세부 조정을 원할 경우 아래 AdSense 고객센터의 매뉴얼을 참고하기 바란다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://support.google.com/adsense/answer/9183363?hl=ko&quot;&gt;반응형 광고 코드 수정 방법&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://support.google.com/adsense/answer/9274025?visit_id=637229849626433504-2364562223&amp;amp;rd=1&quot;&gt;디스플레이 광고 단위 만들기&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-26-making-blog-09/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-26-making-blog-09/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 08.조회수</title>
        <description>&lt;h1 id=&quot;조회수-나타내기--hints-hits-color-hits-색바꾸기-구글-애널리스틱&quot;&gt;조회수 나타내기 | Hints!, Hits color, Hits 색바꾸기, 구글 애널리스틱&lt;/h1&gt;

&lt;p&gt;Jekyll이나 Hugo과 같은 정적 사이트 생성기로 블로그를 운영하다보면, 대표적으로 발생하는 불편함으로 블로그 방문자와의 상호작용을 기록할 수가 없다는 점이 있다.&lt;/p&gt;

&lt;p&gt;이는 자체적인 백엔드가 없기 때문인데. 그렇다보니 서드파티 서비스를 이용하여 이를 대체하고는 한다.&lt;/p&gt;

&lt;p&gt;대표적으로 댓글 기능의 경우는 보통 Disqus나 utterances를 이용해서 구현한다. 방문 기록 분석은 대부분 구글 애널리틱스를 이용한다.&lt;/p&gt;

&lt;p&gt;하지만 내 글의 조회수를 보여주고 싶다면?
​&lt;/p&gt;

&lt;p&gt;구글 애널리틱스 하나면 누가, 어디에서, 언제, 어떤 검색어로, 블로그에 방문했는지 모두 알 수 있다. 그러나 이는 블로그 주인 자신만 볼 수 있다는 문제가 있다.&lt;/p&gt;

&lt;p&gt;내 게시글을 사람들이 이만큼 봤다는것을 보여주고 싶고 내 블로그가 얼마나 인기있는지 보여주고 싶다면?&lt;/p&gt;

&lt;p&gt;성취감을 느낄수 있고 자랑할수 있으며 신뢰감을 주려는 목적으로 글의 조회수를 보여주고 싶다면 어떻게 해야 할까?
​
이번 게시글은 Hits와 애널리스틱으로 조회수를 보고 보여주기 기능을 추가해본다.&lt;/p&gt;

&lt;h2 id=&quot;1_-hits&quot;&gt;1_ Hits&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;🔗 &lt;a href=&quot;http://hits.dwyl.io/&quot;&gt;http://hits.dwyl.io/&lt;/a&gt;
는 본래 깃헙 레파지토리 방문자 수를 세기 위해 만들어졌다.&lt;/p&gt;

&lt;p&gt;사용방법은 매우 간단하다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![HitCount](http://hits.dwyl.com/{unique-string}.svg)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-1.jpeg&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;마크다운 기준으로 위 형태의 URL로 이미지를 불러오면, 해당 URL이 한번 불릴 때마다 조회수가 1씩 올라간 배지가 표시된다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![HitCount](http://hits.dwyl.com/{username}/{project}.svg)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;예:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![HitCount](http://hits.dwyl.com/khw11044/my-project-repository.svg)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;본래 목적대로 깃허브 레파지토리 README에 배지를 달고자 한다면 위 형태의 URL을 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;이 글의 목적은 블로그에 사용하는것이기 때문에 아래와 같이 전체 URL을 넣어주는 형태로 사용하면 된다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-align: center;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://hits.dwyl.com/khw11044.github.io&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://hits.dwyl.com/khw11044githubio.svg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;저는 각 게시물 별로 조회수를 측정하는 것도 좋지만 홈페이지 홈에 사이드바에 조회수를 측정할려고 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;
_includes/sidebar.html
&lt;/code&gt;
에서 위 코드를 social 위에 넣어준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-2.jpeg&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결과는~~~? 두근두근&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-3.jpeg&quot; alt=&quot;그림3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;보는것과 같이 끔찍하다.&lt;/p&gt;

&lt;p&gt;색이 사이드바 배경과 너무 어울리지 않는다.&lt;/p&gt;

&lt;p&gt;색을 바꾸고 싶다.&lt;/p&gt;

&lt;h2 id=&quot;2_-hits설정&quot;&gt;2_ Hits설정&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;🔗 &lt;a href=&quot;https://hits.seeyoufarm.com/&quot;&gt;https://hits.seeyoufarm.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위 링크를 들어가서 아래와 같이 커스텀해준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-4.jpeg&quot; alt=&quot;그림4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 조금 내리면 아래와 같이 나온다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-5.jpeg&quot; alt=&quot;그림5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이중 우리는 HTML LINK를 복사한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-6.png&quot; alt=&quot;그림6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 부분을 지우고 복사한것을 붙여넣어주면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-7.jpeg&quot; alt=&quot;그림7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-8.jpeg&quot; alt=&quot;그림8&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-9.jpeg&quot; alt=&quot;그림9&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;어디든 넣을수 있다.&lt;/p&gt;

&lt;h2 id=&quot;3_-게시물에-넣기&quot;&gt;3_ 게시물에 넣기&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;배지 자동 생성 레이아웃 설정&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;하지만 매번 글을 쓸 때마다 배지를 다는 것은 번거롭습니다. 오타를 내서 URL의 일관성이 떨어질 문제도 있습니다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;때문에 우리는 정적 페이지가 빌드 될 때에 자동으로 배지를 삽입하도록 해봅시다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;Jekyll 기준 게시글의 레이아웃을 지정하는 파일은&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;
_include/post.html
&lt;/code&gt;
입니다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;내가 사용하는 hydejack 테마의 경우&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;
_include/post.html
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;파일이 다음과 같이 되어 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-10.jpeg&quot; alt=&quot;그림10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;header 아래쪽에 넣어준다.&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://github.com/khw11044/githubpagesamplecode/issues/4&quot;&gt;https://github.com/khw11044/githubpagesamplecode/issues/4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;하지만 역시 끔찍한 초록색이 나온다.&lt;/p&gt;

&lt;p&gt;아까사용했던 Hits를 사용하자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-11.png&quot; alt=&quot;그림11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;만들어낸 HTML Link를 일단 가져와서 붙혀넣자 저 부분을 지운다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-12.png&quot; alt=&quot;그림12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이부분을 지운 곳에 넣어준다.&lt;/p&gt;

&lt;p&gt;최종적으로 아래 코드를 넣는다.&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://github.com/khw11044/githubpagesamplecode/issues/4#issuecomment-769615719&quot;&gt;https://github.com/khw11044/githubpagesamplecode/issues/4#issuecomment-769615719&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-13.jpeg&quot; alt=&quot;그림13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결과는 아주 뿌듯하게 잘 나왔다.&lt;/p&gt;

&lt;h2 id=&quot;4_-구글-애널리틱스로-조회수-보기&quot;&gt;4_ 구글 애널리틱스로 조회수 보기&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Hints의 문제는 어찌보면 새로고침의 개수이지 조회수라고 하기 그렇다.&lt;/p&gt;

&lt;p&gt;새로고침만하면 숫자가 증가한다. 따라서 구글 애널리틱스로 실질적인 조회수 조회가 가능하며 어디서 검색되었는지도 알수 있다.&lt;/p&gt;

&lt;p&gt;​
아래 주소로 이동&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://analytics.google.com/&quot;&gt;https://analytics.google.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-14.png&quot; alt=&quot;그림14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;사이드바 가장 아래 관리 아이콘을 누른다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;
+계정만들기
&lt;/code&gt;
버튼을 클릭한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-15.png&quot; alt=&quot;그림15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;계정이름은 블로그라는것을 알수 있게 아무 이름이나 하면 된다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;다음 버튼을 누른다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-16.png&quot; alt=&quot;그림16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;속성 설정을 한다.&lt;/p&gt;

&lt;p&gt;속성이름도 아무거나 해도 되는데 내 블로그 주소로 하였다.&lt;/p&gt;

&lt;p&gt;보고 시간대는 대한민국으로 바꿔주었다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;다음 버튼을 누른다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-17.png&quot; alt=&quot;그림17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;비즈니스 규모나 사용 계획도 아무거나하면 된다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;만들기 버튼을 누른다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-18.png&quot; alt=&quot;그림18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;서비스 약관 계약에서 대한민국으로 바꾸고 동의합니다 체크박스를 체크한다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;계정이 만들어지고 속성이 정해졌다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-19.png&quot; alt=&quot;그림19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;속성 - 데이터 스트림 - 웹을 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-20.png&quot; alt=&quot;그림20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;웹사이트 URL에 자신의 웹사이트 주소를 넣는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-21.png&quot; alt=&quot;그림21&quot; /&gt;&lt;/p&gt;

&lt;p&gt;측정ID가 생성되었다.&lt;/p&gt;

&lt;p&gt;조금더 내리면 전체 사이트 태그가 보인다. 그걸 누르면 아래와 같은 js 코드가 나오는데 저장한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-22.png&quot; alt=&quot;그림22&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 블로그 코드가 들어있는 폴더를 Visual Code를 통해서 본다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-23.png&quot; alt=&quot;그림23&quot; /&gt;&lt;/p&gt;

&lt;p&gt;_config.yml 파일의 google_analytics에 &lt;strong&gt;측정ID&lt;/strong&gt;를 입력한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-24.png&quot; alt=&quot;그림24&quot; /&gt;&lt;/p&gt;

&lt;p&gt;_includes 폴더에 analytics.html 파일을 만들어줍니다.&lt;/p&gt;

&lt;p&gt;저장한 사이트 태그 코드를 붙혀넣기를 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/8-25.png&quot; alt=&quot;그림25&quot; /&gt;&lt;/p&gt;

&lt;p&gt;_layouts 폴더에 post.html 파일에&lt;/p&gt;

&lt;p&gt;{\% include analytics.html \%}을 붙여넣습니다.&lt;/p&gt;

&lt;p&gt;​&lt;img src=&quot;/assets/img/Blog/githubpages/8-26.png&quot; alt=&quot;그림26&quot; /&gt;&lt;/p&gt;

&lt;p&gt;_layouts 폴더의 default.html에&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\{\% include analytics.html \%\}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;을 붙여넣습니다.&lt;/p&gt;

&lt;p&gt;저장을 하고&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle exec jekyll serve&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;를 합니다.&lt;/p&gt;

&lt;p&gt;이후 git commit 하고 push 합니다.&lt;/p&gt;

&lt;p&gt;​&lt;img src=&quot;/assets/img/Blog/githubpages/8-27.png&quot; alt=&quot;그림27&quot; /&gt;&lt;/p&gt;

&lt;p&gt;​&lt;img src=&quot;/assets/img/Blog/githubpages/8-28.png&quot; alt=&quot;그림28&quot; /&gt;&lt;/p&gt;

&lt;p&gt;​&lt;img src=&quot;/assets/img/Blog/githubpages/8-29.png&quot; alt=&quot;그림29&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-26-making-blog-08/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-26-making-blog-08/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 07.댓글기능 추가하기</title>
        <description>&lt;h1 id=&quot;댓글기능-추가하기&quot;&gt;댓글기능 추가하기&lt;/h1&gt;

&lt;p&gt;블로그에 댓글기능이 없어도 블로그를 운영하는데는 상관이 없지만&lt;/p&gt;

&lt;p&gt;댓글 기능이 있음으로 본인이 올린 게시물에 대해 잘못된점을 지적받을수 있고 궁금한점을 물어보고 토론할수 있을것이다. 이처럼 댓글은 블로그의 게시물 퀄리티가 한층 높아지고 커뮤니티의 기능등 블로그의 순 기능들을 잘 수행하게 될것이다.&lt;/p&gt;

&lt;p&gt;처음에 블로그를 시작하게 된 이유를 생각해보자.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;따라서 댓글기능은 한편으로 중요하다고 볼수있다.&lt;/p&gt;

&lt;p&gt;댓글기능 구현은 여러방법이 있는데 그중에서 방문자가 가장 쉽게 댓글을 쓸수 있는 방법을 사용할려고 한다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;댓글을 쓸려고 해도 가입을 해야하거나 로그인하기가 불편하다면 쓸려다가도 안쓰게 된다.&lt;/p&gt;

&lt;p&gt;utterances는 간단히 깃헙 계정이있고 본인 컴퓨터에 깃헙을 로그인 저장되어있다면 버튼하나로 손쉽게 댓글을 쓸수 있다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#댓글기능-추가하기&quot; id=&quot;markdown-toc-댓글기능-추가하기&quot;&gt;댓글기능 추가하기&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1_-utterances란&quot; id=&quot;markdown-toc-1_-utterances란&quot;&gt;1_ utterances란&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#utterances-장점-모음&quot; id=&quot;markdown-toc-utterances-장점-모음&quot;&gt;utterances 장점 모음&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2_-시작하기전에&quot; id=&quot;markdown-toc-2_-시작하기전에&quot;&gt;2_ 시작하기전에&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3_-설치하기&quot; id=&quot;markdown-toc-3_-설치하기&quot;&gt;3_ 설치하기&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4_-configuration&quot; id=&quot;markdown-toc-4_-configuration&quot;&gt;4_ configuration&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#blog-post--issue-매핑-방식을-선택&quot; id=&quot;markdown-toc-blog-post--issue-매핑-방식을-선택&quot;&gt;Blog post &amp;lt;–&amp;gt; Issue 매핑 방식을 선택&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#theme-와-enable-utterances&quot; id=&quot;markdown-toc-theme-와-enable-utterances&quot;&gt;Theme 와 Enable Utterances&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1_-utterances란&quot;&gt;1_ utterances란&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;🔗 &lt;a href=&quot;https://utteranc.es/&quot;&gt;https://utteranc.es/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;utterances는 깃허브의 이슈기능을 가지고 댓글을 생성해준다. 게시글 하나가 이슈 하나와 매핑이 되고, 게시글에 댓글을 달면 해당 이슈에 댓글이 달린다. 댓글 창은 iframe으로 동작하며 해당 페이지가 로드될 때, 페이지의 URL, pathname, 혹은 title을 가지고 issue search API 를 통해 해당 이슈에 달린 댓글을 로딩하여 댓글 창에 로딩시켜준다.&lt;/p&gt;

&lt;p&gt;만약에 내가 최초로 댓글을 달아서 이슈가 없다면? utterances-bot이 자동적으로 이슈를 생성해준다고 한다.&lt;/p&gt;

&lt;p&gt;utterances를 적용하려고 하는 이유는 다음과 같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;개발자 블로그이니 만큼 따로 번거러운 작업 없이 깃허브 계정만으로도 바로 댓글을 쓸수 있으면 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;익숙한 깃허브의 UI를 보고싶다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다음에 또 이런 마이그레이션 작업이 필요할 수 있으니, 게시글과 댓글을 매핑하는 설정을 쉽게 변경할 수 있으면 좋겠다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Disqus는 댓글쓰는것이 불편하다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;utterances-장점-모음&quot;&gt;utterances 장점 모음&lt;/h4&gt;
&lt;p&gt;​
▶깃허브는 다수 개발자가 가입은 해둔 플랫폼입니다.&lt;/p&gt;

&lt;p&gt;-깃허브 앱인 utterances는 깃허브 계정만 있으면 되기 때문에 블로그 운영자와 사용자는 대부분 별도 가입을 하지 않아도 됩니다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;▶특별한 관리 부담이 필요치 않습니다.&lt;/p&gt;

&lt;p&gt;-운영자 입장에서도 자주 사용하는 플랫폼인 깃허브는 친숙한 환경이기에 설치나 관리에 대한 부담이 없습니다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;▶댓글 알림을 받을 수 있습니다.&lt;/p&gt;

&lt;p&gt;-github issues를 댓글 쓰레드로 사용하는 utterances는 댓글이 등록되면, 즉 새로운 issue가 등록된 것이므로 메일 알림을 받을 수 있습니다.&lt;/p&gt;

&lt;p&gt;-이 때문에 소중한 독자와 소통하는 타이밍을 놓치지 않게 됩니다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;▶설치 및 설정이 쉽습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;utterances앱을 깃허브 계정에 추가한 뒤 댓글 저장 용도로 사용될 신규 레포지토리 추가하여 권한을 주면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-이후 댓글 영역에 스크립트 코드 한 줄만 추가해주면 셋팅이 끝납니다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;▶Markdown 문법을 이용하여 댓글 작성이 가능합니다.&lt;/p&gt;

&lt;p&gt;-github 플랫폼을 이용하기 때문에 당연히 마크다운 문법 사용이 가능합니다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;그렇다면 이제 utterance를 적용해보자.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h2 id=&quot;2_-시작하기전에&quot;&gt;2_ 시작하기전에&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;먼저 댓글있을 저장소(레파지토리)를 지정해야합니다.&lt;/p&gt;

&lt;p&gt;따라서 새로운 레파지토리를 만들어줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-1.jpeg&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;저는 이름을 blog-comments-repo로 지어주었습니다.&lt;/p&gt;

&lt;h2 id=&quot;3_-설치하기&quot;&gt;3_ 설치하기&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;utterance app 설치&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://utteranc.es/&quot;&gt;https://utteranc.es/&lt;/a&gt;에서 utterance앱을 설치한다.&lt;/p&gt;

&lt;p&gt;설치 버튼을 클릭해 설치를 실행한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-2.jpeg&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-3.jpeg&quot; alt=&quot;그림3&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;처음에는 All repositories로 선택되어있는데 Only select repositories를 선택하고 블로그 댓글저장소(blog-comments-repo)를 골라주고 이후 Install 버튼을 누른다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-4.jpeg&quot; alt=&quot;그림4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이후 비밀번호로 한번 확인받는다. 이후 아래와 같은 페이지가 나온다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-5.jpeg&quot; alt=&quot;그림5&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;조금더 내려 configuration의 repo:에 자신의 블로그 댓글 저장소를 입력해준다.&lt;/p&gt;

&lt;h2 id=&quot;4_-configuration&quot;&gt;4_ configuration&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-6.jpeg&quot; alt=&quot;그림6&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;blog-post--issue-매핑-방식을-선택&quot;&gt;Blog post &amp;lt;–&amp;gt; Issue 매핑 방식을 선택&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-7.jpeg&quot; alt=&quot;그림7&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위에서 언급했듯이 utterances는 게시글 하나와 레파지토리의 이슈 하나가 서로 연동되는 시스템이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(post &amp;lt;–   –&amp;gt; issue 매핑)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이런 연동 방법으로 난 다섯 가지가 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;pathname&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;포스트의 pathname으로 이슈를 생성한다. 이 포스팅 같은 경우는 /blog/2020/12/18/utterances- 적용으로 이슈가 생성되어 매핑된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;page URL&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;게시글의 URL 전체로 이슈를 매핑한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;page title&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;게시글의 제목으로 이슈를 매핑한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;issue number&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;이슈 번호를 가지고 매핑한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;issue title contains specific term&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;게시글 제목에 특정 단어가 들어가 있는지 체크하여 매핑한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;필자는 URL이 바뀔일이 없다고 생각하여 pathname으로 하였다.&lt;/p&gt;

&lt;h4 id=&quot;theme-와-enable-utterances&quot;&gt;Theme 와 Enable Utterances&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-8.jpeg&quot; alt=&quot;그림8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;테마를 흰색할지 검정색할지등 골라주고 위 코드를 복사해준다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;
_includes/comments.html
&lt;/code&gt;
&lt;/strong&gt;
 파일에 아래와 같이 복사한 코드를 넣어준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-9.jpeg&quot; alt=&quot;그림9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 저장을 하고 터미널에 수번을 했던것처럼 bundle exec jekyll serve를 해준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/7-10.jpeg&quot; alt=&quot;그림10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;짜잔~ 댓글기능이 생겼다.&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-26-making-blog-07/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-26-making-blog-07/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 06.블로그 관리하기</title>
        <description>&lt;h1 id=&quot;블로그-관리하기게시물-쉽게-배포하기&quot;&gt;블로그 관리하기(게시물 쉽게 배포하기)&lt;/h1&gt;

&lt;p&gt;prose.io 와 Github Pages를 연동하여 더 쉽게 수정하고 배포하는 방법을 알아보자.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#블로그-관리하기게시물-쉽게-배포하기&quot; id=&quot;markdown-toc-블로그-관리하기게시물-쉽게-배포하기&quot;&gt;블로그 관리하기(게시물 쉽게 배포하기)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1_-proseio란&quot; id=&quot;markdown-toc-1_-proseio란&quot;&gt;1_ Prose.io란&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#proseio-&quot; id=&quot;markdown-toc-proseio-&quot;&gt;Prose.io ?&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2_-proseio회원가입-및-github-연동&quot; id=&quot;markdown-toc-2_-proseio회원가입-및-github-연동&quot;&gt;2_ Prose.io회원가입 및 Github 연동&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3_-proseio로-포스트-수정하기&quot; id=&quot;markdown-toc-3_-proseio로-포스트-수정하기&quot;&gt;3_ Prose.io로 포스트 수정하기&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4_-admin-세팅&quot; id=&quot;markdown-toc-4_-admin-세팅&quot;&gt;4_ Admin 세팅&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5_-atom&quot; id=&quot;markdown-toc-5_-atom&quot;&gt;5_ Atom&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6_-visual-studio-code&quot; id=&quot;markdown-toc-6_-visual-studio-code&quot;&gt;6_ Visual Studio Code&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1_-proseio란&quot;&gt;1_ Prose.io란&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Jekyll과 Git을 사용하면서 디자인에 집중하거나 웹 프로그래밍의 기능에 집중하거나 배포 시 SFTP 등을 이용하여 변경된 파일을 일일이 기억하고 하나씩 클릭하여 업로드하는 글쓰기에 집중되지 않는 혹은 반복적이고 불편한 작업에서 크게 해방되었다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;이 정도 수준이면 충분히 만족할 만 하지만 사람은 더 편한 환경을 찾기 마련이다. 낯선 장소에서 블로그를 수정할 일이 생긴다면 Git을 설치하고 Clone 명령어를 수행하고 다시 Commit, Push하는 작업을 피할 수는 없기 때문이다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;게다가 수정하고 싶은 부분이 아주 작은 부분일 때 더욱 그렇다. 글을 수정하는데 걸리는 시간은 겨우 10초 정도인데, 환경을 구성하고 배포를 위한 시간이 5분이 걸린다면 능률이 떨어질 수 밖에 없다. 이런 불편함을 해결하고 싶다면?&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;답은 Prose.io다. 분명 Jekyll 기반의 정적 컴파일을 해야 HTML로 변환이 될텐데 신기하게도 FTP 또는 DB에 직접 붙어서 글을 수정하는 것 같은 느낌을 받게된다. 연동도 매우 간단하다. 백번 설명하는 것보다 직접 연동하여 사용해보자.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;proseio-&quot;&gt;Prose.io ?&lt;/h4&gt;

  &lt;p&gt;Prose provides a beautifully simple content authoring environment for CMS-free websites. It’s a web-based interface for managing content on GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2_-proseio회원가입-및-github-연동&quot;&gt;2_ Prose.io회원가입 및 Github 연동&lt;/h2&gt;
&lt;hr /&gt;
&lt;ol&gt;
  &lt;li&gt;Github에 로그인 한후, Prose.io에 접속하자. AUTHORIZE ON GITHUB 버튼을 클릭하면, Prose라는 써드파티 App이 Github으로의 접근권한을 요청하는 화면으로 이동하게 된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-1.jpeg&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Authorize prose를 클릭하여 Prose의 Github 접근을 허용해준다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-2.jpeg&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;패스워드를 입력한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-3.jpeg&quot; alt=&quot;그림3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Git의 Project들이 전부 연동된 것을 확인할 수 있다. 이것으로 연동이 끝났다.&lt;/p&gt;

&lt;h2 id=&quot;3_-proseio로-포스트-수정하기&quot;&gt;3_ Prose.io로 포스트 수정하기&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;연동을 완료하였으니, 테스트로 포스트 하나를 간단히 수정해보자.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;아래 그림과 같이 블로그 Project 우측의 View Project를 클릭한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-4.jpeg&quot; alt=&quot;그림4&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;블로그 글들이 담긴 폴더를 클릭한다.(Jekyll은 대부분 _posts폴더에 작성한 글들이 모여있다.)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-5.jpeg&quot; alt=&quot;그림5&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;_posts에 각 카테고리별 폴더하나를 정해 아무글이나 선택하여 Edit 버튼을 클릭하면, Markdown 편집기가 열려 글을 수정할수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-6.jpeg&quot; alt=&quot;그림6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;class 폴더를 들어가보았다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-7.jpeg&quot; alt=&quot;그림7&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;미리보기(눈 모양) 버튼을 클릭하면 미리보기로 중간 중간 수정이 잘 되고 있는지 확인할 수 있다.(필자의 경우 개요 맨 뒤에 ‘와우와우’를 추가해보았다. 미리보기로도 잘 보여진다.)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-8.jpeg&quot; alt=&quot;그림8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-9.jpeg&quot; alt=&quot;그림9&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;수정이 완료되면 아래 그림과 같이 저장 버튼을 누른다. 저장이 완료되면 COMMIT 버튼을 눌러 배포한다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;수정내역 알림 : 수정 전,후 변경된 부분을 하이라이트로 알려준다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;권장사항 반영 : markdown 권장 문법에 어긋나게 작성한 것은 자동으로 보정해준다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-10.jpeg&quot; alt=&quot;그림10&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;블로그에 접속하면 수정한 사항이 정상적으로 반영된 것을 확인할 수 있다.(약 1분뒤)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-11.jpeg&quot; alt=&quot;그림11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 Prose를 이용하여 어디서든 쉽게 블로그의 글을 수정할 수 있게 되었다.&lt;/p&gt;

&lt;p&gt;관련 Eco 환경이 점점 좋아지고 있기 때문에 굳이 프로그래머가 아니더라도 누구더라도 쉽게 Jekyll 기반의 블로그를 운영할 수 있는 있게 되었다. 프로그래머와 거리가 먼 분일지라도&lt;/p&gt;

&lt;p&gt;구글링을 통해 도전해볼만 하다.&lt;/p&gt;

&lt;h2 id=&quot;4_-admin-세팅&quot;&gt;4_ Admin 세팅&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;다른 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://github.com/jekyll/jekyll-admin/blob/master/README.md&quot;&gt;지킬 공식 플러그인&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;또 다른 방법으로는 admin페이지를 통해 쉽게 게시물을 작성할 수 있다.&lt;/p&gt;

&lt;p&gt;Gemfile파일 안에 아래 코드를 작성해준다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'jekyll-admin', group: :jekyll_plugins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-12.JPG&quot; alt=&quot;그림12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;터미널에 아래와 같이 명령어를 입력한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle install
bundle exec jekyll serve&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이제  http://localhost:4000/admin/ or http://127.0.0.1:4000/admin/ 으로 접근 가능하며 게시물을 쉽게 작성하고 수정할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-13.JPG&quot; alt=&quot;그림13&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5_-atom&quot;&gt;5_ Atom&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;또다른 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;과 &lt;a href=&quot;https://atom.io/packages/markdown-preview-enhanced&quot;&gt;Markdown Preview Enhanced&lt;/a&gt; 패키지를 사용하는 방법&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-14.png&quot; alt=&quot;그림14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6-15.png&quot; alt=&quot;그림15&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6_-visual-studio-code&quot;&gt;6_ Visual Studio Code&lt;/h2&gt;

&lt;p&gt;VS Code 에서도 Atom처럼 프리뷰를 볼수 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6/6-16.jpg&quot; alt=&quot;그림16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6/6-17.png&quot; alt=&quot;그림17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하지만 Atom처럼 보이지 않습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://marketplace.visualstudio.com/items?itemName=hbrok.markdown-preview-bitbucket&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;패키지를 설치해줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6/6-18.png&quot; alt=&quot;그림18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/6/6-19.png&quot; alt=&quot;그림19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Atom처럼 잘보입니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-26-making-blog-06/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-26-making-blog-06/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 05.게시물 검색기능 추가하기</title>
        <description>&lt;h1 id=&quot;블로그내-게시물-검색기능-추가하기&quot;&gt;블로그내 게시물 검색기능 추가하기&lt;/h1&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#블로그내-게시물-검색기능-추가하기&quot; id=&quot;markdown-toc-블로그내-게시물-검색기능-추가하기&quot;&gt;블로그내 게시물 검색기능 추가하기&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1_-폴더다운&quot; id=&quot;markdown-toc-1_-폴더다운&quot;&gt;1_ 폴더다운&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2_-코드수정&quot; id=&quot;markdown-toc-2_-코드수정&quot;&gt;2_ 코드수정&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3_-최적화-적용&quot; id=&quot;markdown-toc-3_-최적화-적용&quot;&gt;3_ 최적화 적용&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1_-폴더다운&quot;&gt;1_ 폴더다운&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;블로그를 오랫동안 관리하다보면 게시물들이 어머어마하게 많아지고 원하는 게시물을 찾는것도 일이된다.&lt;/p&gt;

&lt;p&gt;블로그에 게시물 찾기 기능이 있다면 원하는 게시물을 빠르게 찾을수 있을것이다.&lt;/p&gt;

&lt;p&gt;이런 기능을 추가해보자.&lt;/p&gt;

&lt;p&gt;아래 Github 레파지토리 주소에 접속한다.&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://github.com/jekylltools/jekyll-tipue-search&quot;&gt;​https://github.com/jekylltools/jekyll-tipue-search&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;download 를 클릭하여, jekyll-tipue-search-master.zip 파일을 다운받아 압축을 푼다.&lt;/p&gt;

&lt;p&gt;압축을 풀면 나오는 search.html파일을 본인의 깃헙 블로그 최상위 디렉토리에 붙혀넣는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-1.jpeg&quot; alt=&quot;그림1&quot; /&gt;
다운받은 압축푼 파일에 search.html을&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-2.jpeg&quot; alt=&quot;그림2&quot; /&gt;
자신의 블로그 폴더 root에 붙혀넣는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-3.jpeg&quot; alt=&quot;그림3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다운 받은 압축푼 폴더의 assets의 tipuesearch폴더를 복사한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-4.jpeg&quot; alt=&quot;그림4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자신의 블로그 폴더 root에 붙혀넣는다.&lt;/p&gt;

&lt;h2 id=&quot;2_-코드수정&quot;&gt;2_ 코드수정&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Tipue Search 환경설정&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_config.yml에 가장 아래에 아래 코드를 추가한다.&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
tipue_search:
     include:
         pages: false
         collections: []
     exclude:
         files: [search.html, index.html, tags.html]
         categories: []
         tags: []
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-5.jpeg&quot; alt=&quot;그림5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;include 부분의 pages: false​의 설정은 pages 레이아웃에 해당하는 일반 html페이지는 검색하지 않겠다는 것을 의미한다.(포스트 내용 검색에 집중하기 위함)&lt;/p&gt;

&lt;p&gt;exclude 부분의 ​search.html, index.html, tags.html​ 페이지는 검색에서 제외하겠다는 것을 의미한다.&lt;/p&gt;

&lt;p&gt;_include/head/meta.html에&lt;/p&gt;

&lt;p&gt;본인의 깃헙 블로그 최상위 디렉토리/_includes/head.html (예: C:\blog_includes\head.html) 파일을 열어 META영역 제일하단, ​LINKS영역 바로 위의 위치에 다음의 코드를 추가한다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tipuesearch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;stylesheet&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/assets/tipuesearch/css/tipuesearch.css&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/assets/tipuesearch/tipuesearch_content.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/assets/tipuesearch/tipuesearch_set.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/assets/tipuesearch/tipuesearch.min.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-6.JPG&quot; alt=&quot;그림6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;search.html파일&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-7.jpeg&quot; alt=&quot;그림7&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
'wholeWords' : false,
'showTime'   : false,
'minimumLength' : 1
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout: &lt;/code&gt;
page 부분은 포스팅이 담기는 레이아웃 명칭이다.(테마에 따라 다를 수 있음)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;permalink : &lt;/code&gt;
/search/ 부분은 다음 단계에서 설정할 검색어 및 버튼 Element의 form 태그 내 action 속성과 일치시켜야 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'wholeWords': &lt;/code&gt;
false 속성은 한글 검색을 가능하게 하는 옵션이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'showTime' : &lt;/code&gt;
false 속성은 검색이 완료되기 까지 소요된 시간을 표시하는 옵션이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'minimumLength' : &lt;/code&gt;
1 속성은 최소 검색 글자수에 대한 설정으로 필자는 한단어 이상이면 검색가능하게 설정하였다.&lt;/p&gt;

&lt;p&gt;마지막으로 &lt;strong&gt;본인의 깃헙 블로그 최상위 디렉토리/_includes/sidebar.html&lt;/strong&gt; (예: C:\blog_includes\sidebar.html) 파일을 열어 아래 그림과 같이 설정한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[주의사항]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sidebar.html&lt;/code&gt;
 페이지를 수정하는 이유는 필자가 검색창을 붙이길 원하는 위치의 페이지가 sidebar.html이기 때문입니다. 본인의 블로그에 검색창을 붙일 위치를 정한 후 해당 파일 및 파일 내 위치를 정한 후 해당 부분을 수정해야합니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/search&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tipue_search_left&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/tipuesearch/search.png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tipue_search_icon&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tipue_search_right&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tipue_search_input&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.{1,}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;At least 1 characters&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;clear: both;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-8.jpeg&quot; alt=&quot;그림8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;action=”/search” 설정은 위의 search.html 파일의 permalink 속성과 일치시킨것이다.&lt;/p&gt;

&lt;p&gt;pattern=”.{1,}” 속성은 검색어가 1글자 이상이면 검색을 허용한다는 의미로 활용하는 정규표현식 설정이다.&lt;/p&gt;

&lt;p&gt;title=”At least 1 characters” 설정은 위의 pattern을 지키지 않은 채 검색을 시도할 경우 나타나는 알림메시지 문구이다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;설치가 마무리 되었으므로 아래 그림과 같이 검색이 잘 동작하는지 확인한다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-9.jpeg&quot; alt=&quot;그림9&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3_-최적화-적용&quot;&gt;3_ 최적화 적용&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;최적화 적용을 위한 디테일 마무리&lt;/p&gt;

&lt;p&gt;Tipue Search의 디폴트 기능만 설치된 상태이므로 필자는 블로그에 보다 친화적으로 어울릴 수 있도록 기능을 수정해보았다. 이번 단계는 귀차니즘 가동 시 건너뛰어도 무방하다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;검색 입력창&lt;/strong&gt; 사이즈 조정을 위해&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets\tipuesearch\css\tipuesearch.css&lt;/code&gt;
의 CSS 속성을 변경하였다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-10.jpeg&quot; alt=&quot;그림10&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;#tipue_search_input&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;150px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;max-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#626591&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;-moz-appearance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;-webkit-appearance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;outline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-11.jpeg&quot; alt=&quot;그림11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 컴파일하고 확인해보자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-12.jpeg&quot; alt=&quot;그림12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;검색버튼(돋보기모양)&lt;/strong&gt;이 좌측 메뉴의 배경색에 가려져 잘 보이지 않아 색상을 조절하였고, 본 테마의 img 태그 CSS 속성이 검색창 모양을 삐뚫어져 보이게 만들어 해당 태그의 CSS속성을 상속받아 사이즈를 수정하였다. 마찬가지로 C:\githubPages\theorydb.github.io\assets\tipuesearch\css\tipuesearch.css 파일에서 아래와 같이 CSS 속성을 변경하였다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.tipue_search_icon&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;19px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;19px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.tipue_search_left&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#170247&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;max-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Blog/githubpages/5-13.JPG&quot; alt=&quot;그림13&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/githubpages/2020-12-26-making-blog-05/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/githubpages/2020-12-26-making-blog-05/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
        <category>githubpages</category>
        
      </item>
    
  </channel>
</rss>
